<Activity mc:Ignorable="sap sap2010 sads" x:Class="SCI.TAR.Workflows.EIFArchivingWorkflow.Workflow" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="SCI.TAR.Workflows.EIFArchivingWorkflow.Workflow_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>Microsoft.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities.Design</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Workflow.Runtime</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.ServerRuntime</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>SCI.TAR.Workflows</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="webUrl" />
      <Variable x:TypeArguments="s:DateTime" Name="dateThreshold" />
      <Variable x:TypeArguments="p:DynamicValue" Name="restResponse" />
      <Variable x:TypeArguments="x:Int32" Name="itemsCount" />
      <Variable x:TypeArguments="x:Int32" Name="index" />
    </Sequence.Variables>
    <p1:WebUri DisplayName="Get Web URL" sap2010:WorkflowViewState.IdRef="WebUri_1">
      <p1:WebUri.Result>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">webUrl</mca:CSharpReference>
        </OutArgument>
      </p1:WebUri.Result>
    </p1:WebUri>
    <Sequence DisplayName="Initialization" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Int32" Name="daysThreshold" />
      </Sequence.Variables>
      <Sequence DisplayName="Get Threshold Days" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Name="itemId" />
          <Variable x:TypeArguments="p:DynamicValue" Name="dynamicValue" />
        </Sequence.Variables>
        <p1:LookupSPListItemId DisplayName="Lookup EIF Storage Days setting" sap2010:WorkflowViewState.IdRef="LookupSPListItemId_1" PropertyValue="EIF_StorageDays">
          <p1:LookupSPListItemId.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/TARSettings;}")</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemId.ListId>
          <p1:LookupSPListItemId.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"Title"</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemId.PropertyName>
          <p1:LookupSPListItemId.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">itemId</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItemId.Result>
        </p1:LookupSPListItemId>
        <If DisplayName="If setting not found" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">itemId &lt; 1</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence DisplayName="Error" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <p1:WriteToHistory sap2010:WorkflowViewState.IdRef="WriteToHistory_3" Message="Cannot find EIF_StorageDays setting." />
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="Cannot find EIF_StorageDays setting." />
            </Sequence>
          </If.Then>
        </If>
        <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup item setting" sap2010:WorkflowViewState.IdRef="LookupSPListItem_1">
          <p1:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">itemId</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItem.ItemId>
          <p1:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/TARSettings;}")</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItem.ListId>
          <p1:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItem.Result>
        </p1:LookupSPListItem>
        <p:GetODataProperties DisplayName="GetDynamicValueProperties" sap2010:WorkflowViewState.IdRef="GetODataProperties_1">
          <p:GetODataProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
            </InArgument>
          </p:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:Int32" x:Key="TAR_SettingValue">
              <mca:CSharpReference x:TypeArguments="x:Int32">daysThreshold</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetODataProperties>
      </Sequence>
      <Assign DisplayName="Negate daysThreshold" sap2010:WorkflowViewState.IdRef="Assign_5">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">
            <mca:CSharpReference x:TypeArguments="x:Int32">daysThreshold</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">
            <mca:CSharpValue x:TypeArguments="x:Int32">0 - daysThreshold;</mca:CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
      <Assign DisplayName="Compute date threshold" sap2010:WorkflowViewState.IdRef="Assign_4">
        <Assign.To>
          <OutArgument x:TypeArguments="s:DateTime">
            <mca:CSharpReference x:TypeArguments="s:DateTime">dateThreshold</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="s:DateTime">
            <mca:CSharpValue x:TypeArguments="s:DateTime">DateTime.UtcNow.AddDays(daysThreshold);</mca:CSharpValue>
          </InArgument>
        </Assign.Value>
      </Assign>
    </Sequence>
    <p:HttpSend DisplayName="Call REST to get expired EIF Requests" sap2010:WorkflowViewState.IdRef="HttpSend_1" Method="GET">
      <p:HttpSend.RequestHeaders>
        <InArgument x:TypeArguments="p:DynamicValue">
          <p:SetDynamicValueProperties>
            <scg:Dictionary x:TypeArguments="x:String, InArgument">
              <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
            </scg:Dictionary>
          </p:SetDynamicValueProperties>
        </InArgument>
      </p:HttpSend.RequestHeaders>
      <p:HttpSend.ResponseContent>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpReference x:TypeArguments="p:DynamicValue">restResponse</mca:CSharpReference>
        </OutArgument>
      </p:HttpSend.ResponseContent>
      <p:HttpSend.Uri>
        <InArgument x:TypeArguments="x:String">
          <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}/_api/Lists/getByTitle('EIF Requests')/items?$filter=Created lt datetime'{1}'", webUrl, dateThreshold.ToString("s"));</mca:CSharpValue>
        </InArgument>
      </p:HttpSend.Uri>
    </p:HttpSend>
    <p:GetDynamicValueProperty x:TypeArguments="p:DynamicValue" DisplayName="Get d/results from REST response" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_1" PropertyName="d/results">
      <p:GetDynamicValueProperty.Result>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpReference x:TypeArguments="p:DynamicValue">restResponse</mca:CSharpReference>
        </OutArgument>
      </p:GetDynamicValueProperty.Result>
      <p:GetDynamicValueProperty.Source>
        <InArgument x:TypeArguments="p:DynamicValue">
          <mca:CSharpValue x:TypeArguments="p:DynamicValue">restResponse</mca:CSharpValue>
        </InArgument>
      </p:GetDynamicValueProperty.Source>
    </p:GetDynamicValueProperty>
    <p:CountDynamicValueItems DisplayName="Count finished TAR items" sap2010:WorkflowViewState.IdRef="CountDynamicValueItems_1">
      <p:CountDynamicValueItems.Result>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">itemsCount</mca:CSharpReference>
        </OutArgument>
      </p:CountDynamicValueItems.Result>
      <InArgument x:TypeArguments="p:DynamicValue">
        <mca:CSharpValue x:TypeArguments="p:DynamicValue">restResponse</mca:CSharpValue>
      </InArgument>
    </p:CountDynamicValueItems>
    <Assign DisplayName="Initialize index" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">
          <mca:CSharpReference x:TypeArguments="x:Int32">index</mca:CSharpReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">
          <mca:CSharpValue x:TypeArguments="x:Int32">0;</mca:CSharpValue>
        </InArgument>
      </Assign.Value>
    </Assign>
    <While DisplayName="Iterate over expired EIFs" sap2010:WorkflowViewState.IdRef="While_1">
      <While.Variables>
        <Variable x:TypeArguments="x:Int32" Name="eifId" />
      </While.Variables>
      <While.Condition>
        <mca:CSharpValue x:TypeArguments="x:Boolean">index &lt; itemsCount</mca:CSharpValue>
      </While.Condition>
      <Sequence sap2010:WorkflowViewState.IdRef="Sequence_2">
        <p:GetDynamicValueProperty x:TypeArguments="x:Int32" DisplayName="Get EIF Id" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_2">
          <p:GetDynamicValueProperty.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">string.Format("({0})/Id", index);</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.PropertyName>
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">eifId</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">restResponse</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p1:DeleteListItem ItemGuid="{x:Null}" DisplayName="Delete expired EIF" sap2010:WorkflowViewState.IdRef="DeleteListItem_1">
          <p1:DeleteListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">eifId</mca:CSharpValue>
            </InArgument>
          </p1:DeleteListItem.ItemId>
          <p1:DeleteListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/EIFRequests;}")</mca:CSharpValue>
            </InArgument>
          </p1:DeleteListItem.ListId>
        </p1:DeleteListItem>
        <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">index</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">index + 1;</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </While>
    <sads:DebugSymbol.Symbol>d2lEOlxQcm9qZWN0c1xTQ0kuVEFSXHRhclxTaGFyZVBvaW50XFNDSS5UQVIuV29ya2Zsb3dzXFNDSS5UQVIuV29ya2Zsb3dzXEVJRkFyY2hpdmluZ1dvcmtmbG93XFdvcmtmbG93LnhhbWw7MQOJAg4CAQE5BT8RAwHyAUAFnQEQAgF3ngEFsgESAgFnswEFvgEhAgFZvwEFyAEgAgFMyQEF1AEOAgE/1QEFhwINAgECPAs8VwMB8wFEB4QBEgMBlgGFAQeQARADAYcBkQEHnAEQAgF4oQELpQEpAgF1rwELrwHQAQIBb6oBC6oBYwIBaZ4BeZ4BfgIBaLYBC7YBYwIBYbsBC7sBWwIBW7MBuwGzAcYBAgFawgELwgFaAgFTxgEJxgFZAgFN0QEL0QFKAgFGzAELzAFVAgFA3AEHhgISAgEK2gEJ2gFdAgEDSQlZIQMB1QFaCWYOAwHGAWcJdx8DAaoBeAmDASADAZcBjQENjQFcAwGPAYgBDYgBXwMBiAGZAQ2ZAXQDAYABlAENlAFiAgF5owFFowFjAgF23QEJ7QElAgEp7gEJ+QEdAgEa+gEJhQISAgELSZMBSaQBAwHxAUwPTHwDAegBVg9WWgMB3wFRD1FUAwHWAV0PXVsDAccBYQ1kGAMB0AFvD298AwG9AXQPdGcDAbQBag9qUgMBqwF7D3tfAwGhAYABD4ABYQMBmAHlAQ/lAVkCATjqAQ/qAV8CATHgAQ/gAW4CASr2AQ/2AXwCASLxAQ/xAVECARuCAg+CAlYCARP9AQ/9AVkCAQxiD2KGAQMB0wFjD2OIAQMB0QFiXWKDAQMB1AFjX2OFAQMB0gE=</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WebUri_1" sap:VirtualizedContainerService.HintSize="508,68" />
      <sap2010:ViewStateData Id="LookupSPListItemId_1" sap:VirtualizedContainerService.HintSize="464,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="TAR Settings" Value="Lists/TARSettings" />
              <msdad:ViewStateNameValue x:Key="PropertyName" DisplayName="Title" Value="Title" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_3" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="464,404">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItem_1" sap:VirtualizedContainerService.HintSize="464,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="TAR Settings" Value="Lists/TARSettings" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_1" sap:VirtualizedContainerService.HintSize="464,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/TARSettings</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="486,897">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="486,62" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="486,62" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="508,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="HttpSend_1" sap:VirtualizedContainerService.HintSize="508,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_1" sap:VirtualizedContainerService.HintSize="508,22" />
      <sap2010:ViewStateData Id="CountDynamicValueItems_1" sap:VirtualizedContainerService.HintSize="508,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="508,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="DeleteListItem_1" sap:VirtualizedContainerService.HintSize="242,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="EIF Requests" Value="Lists/EIFRequests" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="264,356">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="508,516" />
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="530,1167">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SCI.TAR.Workflows.EIFArchivingWorkflow.Workflow_1" sap:VirtualizedContainerService.HintSize="570,1247" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>