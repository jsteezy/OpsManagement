<Activity mc:Ignorable="sap sap2010 sads" x:Class="SCI.TAR.Workflows.EIFWorkflow.Workflow" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap2010:WorkflowViewState.IdRef="SCI.TAR.Workflows.EIFWorkflow.Workflow_1"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:msdad="clr-namespace:Microsoft.SharePoint.DesignTime.Activities.Design;assembly=Microsoft.SharePoint.DesignTime.Activities.Design"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation"
 xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Text</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>Microsoft.Activities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.Activities.Design</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.DesignTime.Activities.Design</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Workflow.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Workflow.Runtime</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint</AssemblyReference>
      <AssemblyReference>Microsoft.SharePoint.Client.ServerRuntime</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>SCI.TAR.Workflows</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Main Sequence" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" Name="webUrl" />
      <Variable x:TypeArguments="sco:Collection(x:String)" Name="tokenPlaceholders" />
      <Variable x:TypeArguments="sco:Collection(x:String)" Name="tokenValues" />
      <Variable x:TypeArguments="p:DynamicValue" Name="dynamicValue" />
      <Variable x:TypeArguments="x:String" Name="submittedEmailSubject" />
      <Variable x:TypeArguments="x:String" Name="submittedEmailContent" />
      <Variable x:TypeArguments="p:DynamicValue" Name="eifDetails" />
      <Variable x:TypeArguments="x:String" Name="requesterLoginName" />
      <Variable x:TypeArguments="x:String" Name="requesterName" />
      <Variable x:TypeArguments="x:String" Name="staffResponsibleLoginName" />
      <Variable x:TypeArguments="x:String" Name="appRelativeUrl" />
      <Variable x:TypeArguments="sco:Collection(x:String)" Name="countryDirectorsLoginNames" />
      <Variable x:TypeArguments="x:String" Name="additionalStaffMemberLoginName" />
    </Sequence.Variables>
    <p1:WebUri sap2010:WorkflowViewState.IdRef="WebUri_1">
      <p1:WebUri.Result>
        <OutArgument x:TypeArguments="x:String">
          <mca:CSharpReference x:TypeArguments="x:String">webUrl</mca:CSharpReference>
        </OutArgument>
      </p1:WebUri.Result>
    </p1:WebUri>
    <Sequence DisplayName="Initialization" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Boolean" Name="dynamicValueIsEmpty" />
        <Variable x:TypeArguments="x:Int32" Name="tokenValueInt" />
        <Variable x:TypeArguments="x:String" Name="emailAddress" />
        <Variable x:TypeArguments="x:String" Name="tokenValueString" />
        <Variable x:TypeArguments="x:Int32" Name="collectionSize" />
        <Variable x:TypeArguments="x:Int32" Name="index" />
        <Variable x:TypeArguments="s:DateTime" Name="tokenValueDateTime" />
        <Variable x:TypeArguments="x:String" Name="eifId" />
        <Variable x:TypeArguments="x:String" Name="tarId" />
      </Sequence.Variables>
      <p:BuildCollection x:TypeArguments="x:String" DisplayName="Initialize tokenPlaceholders" sap2010:WorkflowViewState.IdRef="BuildCollection`1_1">
        <p:BuildCollection.Collection>
          <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">tokenPlaceholders</mca:CSharpValue>
          </InArgument>
        </p:BuildCollection.Collection>
        <p:BuildCollection.Result>
          <OutArgument x:TypeArguments="sco:Collection(x:String)">
            <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">tokenPlaceholders</mca:CSharpReference>
          </OutArgument>
        </p:BuildCollection.Result>
      </p:BuildCollection>
      <p:BuildCollection x:TypeArguments="x:String" DisplayName="Initialize tokenValues" sap2010:WorkflowViewState.IdRef="BuildCollection`1_2">
        <p:BuildCollection.Collection>
          <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">tokenValues</mca:CSharpValue>
          </InArgument>
        </p:BuildCollection.Collection>
        <p:BuildCollection.Result>
          <OutArgument x:TypeArguments="sco:Collection(x:String)">
            <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">tokenValues</mca:CSharpReference>
          </OutArgument>
        </p:BuildCollection.Result>
      </p:BuildCollection>
      <Sequence DisplayName="Get Submitted Email Template" sap2010:WorkflowViewState.IdRef="Sequence_3">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Name="emailTemplateId" />
        </Sequence.Variables>
        <p1:LookupSPListItemId DisplayName="Get Email Template Id" sap2010:WorkflowViewState.IdRef="LookupSPListItemId_1" PropertyValue="EIF_Submitted">
          <p1:LookupSPListItemId.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/TAREmailTemplates;}")</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemId.ListId>
          <p1:LookupSPListItemId.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"LinkTitle"</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemId.PropertyName>
          <p1:LookupSPListItemId.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">emailTemplateId</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItemId.Result>
        </p1:LookupSPListItemId>
        <If DisplayName="If email template not found" sap2010:WorkflowViewState.IdRef="If_1">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">emailTemplateId &lt; 1</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_4">
              <p1:WriteToHistory DisplayName="Log Error" sap2010:WorkflowViewState.IdRef="WriteToHistory_3" Message="EIF_Submitted email template not found." />
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_1" Reason="EIF_Submitted email template not found." />
            </Sequence>
          </If.Then>
        </If>
        <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup Email Template" sap2010:WorkflowViewState.IdRef="LookupSPListItem_1">
          <p1:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">emailTemplateId</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItem.ItemId>
          <p1:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/TAREmailTemplates;}")</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItem.ListId>
          <p1:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItem.Result>
        </p1:LookupSPListItem>
        <p:GetODataProperties DisplayName="Get Email Template details" sap2010:WorkflowViewState.IdRef="GetODataProperties_1">
          <p:GetODataProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
            </InArgument>
          </p:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="TAR_EmailSubject">
              <mca:CSharpReference x:TypeArguments="x:String">submittedEmailSubject</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="TAR_EmailContent">
              <mca:CSharpReference x:TypeArguments="x:String">submittedEmailContent</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetODataProperties>
        <If DisplayName="If email details are empty" sap2010:WorkflowViewState.IdRef="If_2">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">string.IsNullOrEmpty(submittedEmailSubject) || string.IsNullOrEmpty(submittedEmailContent)</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_5">
              <p1:WriteToHistory DisplayName="Log error" sap2010:WorkflowViewState.IdRef="WriteToHistory_4" Message="Invalid email template details." />
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_2" Reason="Invalid email template details." />
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Get EIF WF Settings" sap2010:WorkflowViewState.IdRef="Sequence_27">
        <p1:LookupSPListItemId DisplayName="Lookup TARSettings App relative path" sap2010:WorkflowViewState.IdRef="LookupSPListItemId_2" PropertyValue="AppRelativeUrl">
          <p1:LookupSPListItemId.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/TARSettings;}")</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemId.ListId>
          <p1:LookupSPListItemId.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">"LinkTitle"</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItemId.PropertyName>
          <p1:LookupSPListItemId.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItemId.Result>
        </p1:LookupSPListItemId>
        <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup TAR Setting" sap2010:WorkflowViewState.IdRef="LookupSPListItem_3">
          <p1:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItem.ItemId>
          <p1:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <mca:CSharpValue x:TypeArguments="s:Guid">System.Guid.Parse("{$ListId:Lists/TARSettings;}")</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPListItem.ListId>
          <p1:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItem.Result>
        </p1:LookupSPListItem>
        <p:GetODataProperties DisplayName="Get App relative URL" sap2010:WorkflowViewState.IdRef="GetODataProperties_4">
          <p:GetODataProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
            </InArgument>
          </p:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="TAR_SettingValue">
              <mca:CSharpReference x:TypeArguments="x:String">appRelativeUrl</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetODataProperties>
      </Sequence>
      <Sequence DisplayName="Get EIF Request item" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup current EIF item" sap2010:WorkflowViewState.IdRef="LookupSPListItem_2">
          <p1:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerValue x:TypeArguments="x:Int32">
                <p1:GetCurrentItemId />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ItemId>
          <p1:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <p:ExpressionContainerValue x:TypeArguments="s:Guid">
                <p1:GetCurrentListId />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ListId>
          <p1:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPListItem.Result>
        </p1:LookupSPListItem>
        <p:IsEmptyDynamicValue DisplayName="Check if eifDetails is empty" sap2010:WorkflowViewState.IdRef="IsEmptyDynamicValue_1">
          <p:IsEmptyDynamicValue.Input>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:IsEmptyDynamicValue.Input>
          <p:IsEmptyDynamicValue.Result>
            <OutArgument x:TypeArguments="x:Boolean">
              <mca:CSharpReference x:TypeArguments="x:Boolean">dynamicValueIsEmpty</mca:CSharpReference>
            </OutArgument>
          </p:IsEmptyDynamicValue.Result>
        </p:IsEmptyDynamicValue>
        <If DisplayName="If eifDetails is empty" sap2010:WorkflowViewState.IdRef="If_3">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">dynamicValueIsEmpty</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_7">
              <p1:WriteToHistory DisplayName="Log error" sap2010:WorkflowViewState.IdRef="WriteToHistory_5" Message="No EIF Request found." />
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_3" Reason="No EIF Request found." />
            </Sequence>
          </If.Then>
        </If>
      </Sequence>
      <Sequence DisplayName="Get EIF Requester" sap2010:WorkflowViewState.IdRef="Sequence_8">
        <p:GetDynamicValueProperty x:TypeArguments="x:Int32" DisplayName="Get Requester Id" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_1" PropertyName="d/results/(0)/TAR_RequesterId">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p1:LookupSPUser DisplayName="Lookup Requester" sap2010:WorkflowViewState.IdRef="LookupSPUser_1">
          <p1:LookupSPUser.PrincipalId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPUser.PrincipalId>
          <p1:LookupSPUser.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPUser.Result>
        </p1:LookupSPUser>
        <p:GetODataProperties DisplayName="Get Requester properties" sap2010:WorkflowViewState.IdRef="GetODataProperties_2">
          <p:GetODataProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
            </InArgument>
          </p:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="LoginName">
              <mca:CSharpReference x:TypeArguments="x:String">requesterLoginName</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Email">
              <mca:CSharpReference x:TypeArguments="x:String">emailAddress</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Title">
              <mca:CSharpReference x:TypeArguments="x:String">requesterName</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetODataProperties>
        <If DisplayName="If requester has no email address" sap2010:WorkflowViewState.IdRef="If_4">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">string.IsNullOrEmpty(emailAddress)</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_9">
              <p1:WriteToHistory DisplayName="Log error" sap2010:WorkflowViewState.IdRef="WriteToHistory_6">
                <p1:WriteToHistory.Message>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">string.Format("User {} has no email address.", requesterLoginName);</mca:CSharpValue>
                  </InArgument>
                </p1:WriteToHistory.Message>
              </p1:WriteToHistory>
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_4">
                <TerminateWorkflow.Reason>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">string.Format("User {} has no email address.", requesterLoginName);</mca:CSharpValue>
                  </InArgument>
                </TerminateWorkflow.Reason>
              </TerminateWorkflow>
            </Sequence>
          </If.Then>
        </If>
        <If DisplayName="If requester has no name" sap2010:WorkflowViewState.IdRef="If_5">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">string.IsNullOrEmpty(requesterName)</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_10">
              <p1:WriteToHistory DisplayName="Log error" sap2010:WorkflowViewState.IdRef="WriteToHistory_7">
                <p1:WriteToHistory.Message>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">string.Format("User {0} has no name associated.", requesterLoginName);</mca:CSharpValue>
                  </InArgument>
                </p1:WriteToHistory.Message>
              </p1:WriteToHistory>
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_5">
                <TerminateWorkflow.Reason>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">string.Format("User {0} has no name associated.", requesterLoginName);</mca:CSharpValue>
                  </InArgument>
                </TerminateWorkflow.Reason>
              </TerminateWorkflow>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Add tokens" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add {REQUESTER} to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_1" Item="{}{REQUESTER}">
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add {REQUESTER} encoded to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_2" Item="&amp;#123;REQUESTER&amp;#125;">
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add requester to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_3">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">requesterName</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add requester to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_4">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">requesterName</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Get EIF Guest Traveller" sap2010:WorkflowViewState.IdRef="Sequence_12">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="guestTravellerName" />
        </Sequence.Variables>
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Guest Traveller First Name" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_2" PropertyName="d/results/(0)/TAR_FirstName">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">guestTravellerName</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Guest Travller Last Name" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_3" PropertyName="d/results/(0)/TAR_LastName">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">tokenValueString</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <Assign DisplayName="Build Guest Traveller Full Name" sap2010:WorkflowViewState.IdRef="Assign_1">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">guestTravellerName</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0} {1}", guestTravellerName, tokenValueString);</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <If DisplayName="If guest traveller name is empty" sap2010:WorkflowViewState.IdRef="If_6">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">string.IsNullOrEmpty(guestTravellerName)</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13">
              <p1:WriteToHistory DisplayName="Log error" sap2010:WorkflowViewState.IdRef="WriteToHistory_8" Message="Guest traveller name is empty." />
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_6" Reason="Guest traveller name is empty." />
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Add tokens" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add {GUEST_TRAVELLER} to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_5" Item="{}{GUEST_TRAVELLER}">
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add {GUEST_TRAVELLER} encoded to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_6" Item="&amp;#123;GUEST_TRAVELLER&amp;#125;">
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add guest traveller to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_7">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">guestTravellerName</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add guest traveller to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_8">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">guestTravellerName</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Get EIF Additional Staff Member" sap2010:WorkflowViewState.IdRef="Sequence_36">
        <p:GetDynamicValueProperty x:TypeArguments="x:Int32" DisplayName="Get Additional Staff Member Id" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_14" PropertyName="d/results/(0)/TAR_AdditionalStaffMemberId">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <If DisplayName="If there is a Staff Member added" sap2010:WorkflowViewState.IdRef="If_14">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">tokenValueInt &gt; 0</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_37">
              <p1:LookupSPUser DisplayName="Lookup Additional Staff Member" sap2010:WorkflowViewState.IdRef="LookupSPUser_4">
                <p1:LookupSPUser.PrincipalId>
                  <InArgument x:TypeArguments="x:Int32">
                    <mca:CSharpValue x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpValue>
                  </InArgument>
                </p1:LookupSPUser.PrincipalId>
                <p1:LookupSPUser.Result>
                  <OutArgument x:TypeArguments="p:DynamicValue">
                    <mca:CSharpReference x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpReference>
                  </OutArgument>
                </p1:LookupSPUser.Result>
              </p1:LookupSPUser>
              <p:GetODataProperties DisplayName="Get Additional Staff Member Login Name" sap2010:WorkflowViewState.IdRef="GetODataProperties_6">
                <p:GetODataProperties.Source>
                  <InArgument x:TypeArguments="p:DynamicValue">
                    <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
                  </InArgument>
                </p:GetODataProperties.Source>
                <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                  <OutArgument x:TypeArguments="x:String" x:Key="LoginName">
                    <mca:CSharpReference x:TypeArguments="x:String">additionalStaffMemberLoginName</mca:CSharpReference>
                  </OutArgument>
                </scg:Dictionary>
              </p:GetODataProperties>
            </Sequence>
          </If.Then>
          <If.Else>
            <Assign DisplayName="Set staff member login name to empty" sap2010:WorkflowViewState.IdRef="Assign_16">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">additionalStaffMemberLoginName</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">string.Empty</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Get EIF ID" sap2010:WorkflowViewState.IdRef="Sequence_17">
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get EIF Title from eifDetails" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_4" PropertyName="d/results/(0)/Title">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">eifId</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <If sap2010:WorkflowViewState.IdRef="If_7">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">string.IsNullOrEmpty(eifId)</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18">
              <p1:WriteToHistory DisplayName="Log error" sap2010:WorkflowViewState.IdRef="WriteToHistory_9" Message="No EIF ID found." />
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_7" Reason="No EIF ID found." />
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Add tokens" sap2010:WorkflowViewState.IdRef="Sequence_19">
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add {EIF_ID} to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_9" Item="{}{EIF_ID}">
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add {EIF_ID} encoded to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_10" Item="&amp;#123;EIF_ID&amp;#125;">
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add eif ID to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_11">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">eifId</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add eif ID to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_12">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">eifId</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Get TAR ID" sap2010:WorkflowViewState.IdRef="Sequence_32">
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get EIF TAR Id from eifDetails" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_13" PropertyName="d/results/(0)/TAR_TarId">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">tarId</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
      </Sequence>
      <Sequence DisplayName="Set EIF details link" sap2010:WorkflowViewState.IdRef="Sequence_35">
        <AddToCollection x:TypeArguments="x:String" DisplayName="Add http://{EIF_LINK} encoded to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_32" Item="http&amp;#58;//eif_link">
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
          </InArgument>
        </AddToCollection>
        <If DisplayName="If EIF is with funds" sap2010:WorkflowViewState.IdRef="If_13">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">!string.IsNullOrEmpty(tarId)</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence DisplayName="Has tar associated" sap2010:WorkflowViewState.IdRef="Sequence_33">
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add EIF LINK to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_33">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}{1}#/details/eif-funds-details/{2}/{3}", webUrl, appRelativeUrl, eifId, tarId);</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Does not have tar associated" sap2010:WorkflowViewState.IdRef="Sequence_34">
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add EIF LINK to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_31">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}{1}#/details/eif-details/{2}", webUrl, appRelativeUrl, eifId);</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Get EIF Staff Responsible" sap2010:WorkflowViewState.IdRef="Sequence_20">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:String" Name="staffResponsibleName" />
        </Sequence.Variables>
        <p:GetDynamicValueProperty x:TypeArguments="x:Int32" DisplayName="Get Staff Responsible Id" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_5" PropertyName="d/results/(0)/TAR_StaffResponsibleForGuestId">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p1:LookupSPUser DisplayName="Lookup Staff Responsible" sap2010:WorkflowViewState.IdRef="LookupSPUser_2">
          <p1:LookupSPUser.PrincipalId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPUser.PrincipalId>
          <p1:LookupSPUser.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPUser.Result>
        </p1:LookupSPUser>
        <p:GetODataProperties DisplayName="Get Staff Responsible properties" sap2010:WorkflowViewState.IdRef="GetODataProperties_3">
          <p:GetODataProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
            </InArgument>
          </p:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:String" x:Key="Title">
              <mca:CSharpReference x:TypeArguments="x:String">staffResponsibleName</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="Email">
              <mca:CSharpReference x:TypeArguments="x:String">emailAddress</mca:CSharpReference>
            </OutArgument>
            <OutArgument x:TypeArguments="x:String" x:Key="LoginName">
              <mca:CSharpReference x:TypeArguments="x:String">staffResponsibleLoginName</mca:CSharpReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetODataProperties>
        <If DisplayName="If staff responsible has no email address OR no name" sap2010:WorkflowViewState.IdRef="If_8">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">string.IsNullOrEmpty(emailAddress) || string.IsNullOrEmpty(staffResponsibleName)</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_21">
              <p1:WriteToHistory DisplayName="Log error" sap2010:WorkflowViewState.IdRef="WriteToHistory_10">
                <p1:WriteToHistory.Message>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">string.Format("User {0} has no email address or no name", staffResponsibleLoginName);</mca:CSharpValue>
                  </InArgument>
                </p1:WriteToHistory.Message>
              </p1:WriteToHistory>
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_8">
                <TerminateWorkflow.Reason>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">string.Format("User {0} has no email address or no name", staffResponsibleLoginName);</mca:CSharpValue>
                  </InArgument>
                </TerminateWorkflow.Reason>
              </TerminateWorkflow>
            </Sequence>
          </If.Then>
          <If.Else>
            <Sequence DisplayName="Add tokens" sap2010:WorkflowViewState.IdRef="Sequence_22">
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add {STAFF_RESPONSIBLE_FOR_GUEST} to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_13" Item="{}{STAFF_RESPONSIBLE_FOR_GUEST}">
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add {STAFF_RESPONSIBLE_FOR_GUEST} encoded to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_14" Item="&amp;#123;STAFF_RESPONSIBLE_FOR_GUEST&amp;#125;">
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add staff responsible name to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_15">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">staffResponsibleName</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
              <AddToCollection x:TypeArguments="x:String" DisplayName="Add staff responsible name to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_16">
                <AddToCollection.Item>
                  <InArgument x:TypeArguments="x:String">
                    <mca:CSharpValue x:TypeArguments="x:String">staffResponsibleName</mca:CSharpValue>
                  </InArgument>
                </AddToCollection.Item>
                <InArgument x:TypeArguments="scg:ICollection(x:String)">
                  <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
                </InArgument>
              </AddToCollection>
            </Sequence>
          </If.Else>
        </If>
      </Sequence>
      <Sequence DisplayName="Get EIF Destinations" sap2010:WorkflowViewState.IdRef="Sequence_25">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Name="destinationsCount" />
          <Variable x:TypeArguments="x:String" Name="destinations" />
        </Sequence.Variables>
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Destinations JSON" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_6" PropertyName="d/results/(0)/TAR_Destinations">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <mca:CSharpReference x:TypeArguments="x:String">tokenValueString</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p:ParseDynamicValue DisplayName="Parse Destinations JSON" sap2010:WorkflowViewState.IdRef="ParseDynamicValue_1">
          <p:ParseDynamicValue.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpReference>
            </OutArgument>
          </p:ParseDynamicValue.Result>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">tokenValueString</mca:CSharpValue>
          </InArgument>
        </p:ParseDynamicValue>
        <p:CountDynamicValueItems DisplayName="Count Destinations DynamicValueItems" sap2010:WorkflowViewState.IdRef="CountDynamicValueItems_1">
          <p:CountDynamicValueItems.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">destinationsCount</mca:CSharpReference>
            </OutArgument>
          </p:CountDynamicValueItems.Result>
          <InArgument x:TypeArguments="p:DynamicValue">
            <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
          </InArgument>
        </p:CountDynamicValueItems>
        <If DisplayName="If destinationsCount == 0" sap2010:WorkflowViewState.IdRef="If_9">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <mca:CSharpValue x:TypeArguments="x:Boolean">destinationsCount == 0</mca:CSharpValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence sap2010:WorkflowViewState.IdRef="Sequence_23">
              <p1:WriteToHistory DisplayName="Log error" sap2010:WorkflowViewState.IdRef="WriteToHistory_11" Message="No destinations introduced." />
              <TerminateWorkflow sap2010:WorkflowViewState.IdRef="TerminateWorkflow_9" Reason="Invalid input data." />
            </Sequence>
          </If.Then>
        </If>
        <p:BuildCollection x:TypeArguments="x:String" DisplayName="Build countryDirectorsLoginNames collection" sap2010:WorkflowViewState.IdRef="BuildCollection`1_5">
          <p:BuildCollection.Collection>
            <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">countryDirectorsLoginNames</mca:CSharpValue>
            </InArgument>
          </p:BuildCollection.Collection>
          <p:BuildCollection.Result>
            <OutArgument x:TypeArguments="sco:Collection(x:String)">
              <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">countryDirectorsLoginNames</mca:CSharpReference>
            </OutArgument>
          </p:BuildCollection.Result>
        </p:BuildCollection>
        <Assign DisplayName="Initialize index" sap2010:WorkflowViewState.IdRef="Assign_6">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">index</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">0</InArgument>
          </Assign.Value>
        </Assign>
        <While DisplayName="Iterate over destinations dynamicValue " sap2010:WorkflowViewState.IdRef="While_2">
          <While.Variables>
            <Variable x:TypeArguments="x:String" Name="destinationsQuery" />
            <Variable x:TypeArguments="x:String" Name="directorQuery" />
            <Variable x:TypeArguments="p:DynamicValue" Name="userDetails" />
            <Variable x:TypeArguments="x:String" Name="userLoginName" />
          </While.Variables>
          <While.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean">index &lt; destinationsCount</mca:CSharpValue>
          </While.Condition>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_24">
            <Assign DisplayName="Create query statement for country title" sap2010:WorkflowViewState.IdRef="Assign_7">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">destinationsQuery</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">string.Format("({0})/country/title", index);</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <Assign DisplayName="Create query statement for country director" sap2010:WorkflowViewState.IdRef="Assign_13">
              <Assign.To>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">directorQuery</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">string.Format("({0})/country/director/Id", index);</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
            <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get destination from JSON" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_7">
              <p:GetDynamicValueProperty.PropertyName>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">destinationsQuery</mca:CSharpValue>
                </InArgument>
              </p:GetDynamicValueProperty.PropertyName>
              <p:GetDynamicValueProperty.Result>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">tokenValueString</mca:CSharpReference>
                </OutArgument>
              </p:GetDynamicValueProperty.Result>
              <p:GetDynamicValueProperty.Source>
                <InArgument x:TypeArguments="p:DynamicValue">
                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
                </InArgument>
              </p:GetDynamicValueProperty.Source>
            </p:GetDynamicValueProperty>
            <If DisplayName="If destinations is empty" sap2010:WorkflowViewState.IdRef="If_11">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">string.IsNullOrEmpty(destinations)</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Assign sap2010:WorkflowViewState.IdRef="Assign_14">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <mca:CSharpReference x:TypeArguments="x:String">destinations</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">tokenValueString</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </If.Then>
              <If.Else>
                <Assign DisplayName="Add new destination" sap2010:WorkflowViewState.IdRef="Assign_15">
                  <Assign.To>
                    <OutArgument x:TypeArguments="x:String">
                      <mca:CSharpReference x:TypeArguments="x:String">destinations</mca:CSharpReference>
                    </OutArgument>
                  </Assign.To>
                  <Assign.Value>
                    <InArgument x:TypeArguments="x:String">
                      <mca:CSharpValue x:TypeArguments="x:String">string.Format("{0}, {1}", destinations, tokenValueString);</mca:CSharpValue>
                    </InArgument>
                  </Assign.Value>
                </Assign>
              </If.Else>
            </If>
            <p:GetDynamicValueProperty x:TypeArguments="x:Int32" DisplayName="Get Country Director Id from JSON" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_12">
              <p:GetDynamicValueProperty.PropertyName>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">directorQuery</mca:CSharpValue>
                </InArgument>
              </p:GetDynamicValueProperty.PropertyName>
              <p:GetDynamicValueProperty.Result>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpReference>
                </OutArgument>
              </p:GetDynamicValueProperty.Result>
              <p:GetDynamicValueProperty.Source>
                <InArgument x:TypeArguments="p:DynamicValue">
                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
                </InArgument>
              </p:GetDynamicValueProperty.Source>
            </p:GetDynamicValueProperty>
            <If DisplayName="If there is a valid country director" sap2010:WorkflowViewState.IdRef="If_12">
              <If.Condition>
                <InArgument x:TypeArguments="x:Boolean">
                  <mca:CSharpValue x:TypeArguments="x:Boolean">tokenValueInt &gt; 0</mca:CSharpValue>
                </InArgument>
              </If.Condition>
              <If.Then>
                <Sequence DisplayName="Lookup and Add CD" sap2010:WorkflowViewState.IdRef="Sequence_31">
                  <p1:LookupSPUser DisplayName="Lookup Country Director" sap2010:WorkflowViewState.IdRef="LookupSPUser_3">
                    <p1:LookupSPUser.PrincipalId>
                      <InArgument x:TypeArguments="x:Int32">
                        <mca:CSharpValue x:TypeArguments="x:Int32">tokenValueInt</mca:CSharpValue>
                      </InArgument>
                    </p1:LookupSPUser.PrincipalId>
                    <p1:LookupSPUser.Result>
                      <OutArgument x:TypeArguments="p:DynamicValue">
                        <mca:CSharpReference x:TypeArguments="p:DynamicValue">userDetails</mca:CSharpReference>
                      </OutArgument>
                    </p1:LookupSPUser.Result>
                  </p1:LookupSPUser>
                  <p:GetODataProperties DisplayName="Get Country Director Login Name" sap2010:WorkflowViewState.IdRef="GetODataProperties_5">
                    <p:GetODataProperties.Source>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <mca:CSharpValue x:TypeArguments="p:DynamicValue">userDetails</mca:CSharpValue>
                      </InArgument>
                    </p:GetODataProperties.Source>
                    <scg:Dictionary x:TypeArguments="x:String, OutArgument">
                      <OutArgument x:TypeArguments="x:String" x:Key="LoginName">
                        <mca:CSharpReference x:TypeArguments="x:String">userLoginName</mca:CSharpReference>
                      </OutArgument>
                    </scg:Dictionary>
                  </p:GetODataProperties>
                  <AddToCollection x:TypeArguments="x:String" DisplayName="Add CD Login Name to collection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_28">
                    <AddToCollection.Item>
                      <InArgument x:TypeArguments="x:String">
                        <mca:CSharpValue x:TypeArguments="x:String">userLoginName</mca:CSharpValue>
                      </InArgument>
                    </AddToCollection.Item>
                    <InArgument x:TypeArguments="scg:ICollection(x:String)">
                      <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">countryDirectorsLoginNames</mca:CSharpValue>
                    </InArgument>
                  </AddToCollection>
                </Sequence>
              </If.Then>
            </If>
            <Assign DisplayName="Increase index" sap2010:WorkflowViewState.IdRef="Assign_10">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">index</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">index + 1</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </While>
        <AddToCollection x:TypeArguments="x:String" DisplayName="Add {DESTINATIONS} to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_17" Item="{}{DESTINATIONS}">
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
          </InArgument>
        </AddToCollection>
        <AddToCollection x:TypeArguments="x:String" DisplayName="Add {DESTINATIONS} encoded to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_18" Item="&amp;#123;DESTINATIONS&amp;#125;">
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
          </InArgument>
        </AddToCollection>
        <AddToCollection x:TypeArguments="x:String" DisplayName="Add destinations to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_19">
          <AddToCollection.Item>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">destinations</mca:CSharpValue>
            </InArgument>
          </AddToCollection.Item>
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
          </InArgument>
        </AddToCollection>
        <AddToCollection x:TypeArguments="x:String" DisplayName="Add destinations to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_20">
          <AddToCollection.Item>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">destinations</mca:CSharpValue>
            </InArgument>
          </AddToCollection.Item>
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
          </InArgument>
        </AddToCollection>
      </Sequence>
      <Sequence DisplayName="Get EIF Departure Date" sap2010:WorkflowViewState.IdRef="Sequence_26">
        <p:GetDynamicValueProperty x:TypeArguments="s:DateTime" DisplayName="Get Departure Date" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_8" PropertyName="d/results/(0)/TAR_DepartureDate">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="s:DateTime">
              <mca:CSharpReference x:TypeArguments="s:DateTime">tokenValueDateTime</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">eifDetails</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <AddToCollection x:TypeArguments="x:String" DisplayName="Add {DEPARTURE_DATE} to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_21" Item="{}{DEPARTURE_DATE}">
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
          </InArgument>
        </AddToCollection>
        <AddToCollection x:TypeArguments="x:String" DisplayName="Add {DEPARTURE_DATE} encoded to tokenPlaceholders" sap2010:WorkflowViewState.IdRef="AddToCollection`1_22" Item="&amp;#123;DEPARTURE_DATE&amp;#125;">
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
          </InArgument>
        </AddToCollection>
        <AddToCollection x:TypeArguments="x:String" DisplayName="Add departure date to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_23">
          <AddToCollection.Item>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">tokenValueDateTime.ToString("MM/dd/yyyy")</mca:CSharpValue>
            </InArgument>
          </AddToCollection.Item>
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
          </InArgument>
        </AddToCollection>
        <AddToCollection x:TypeArguments="x:String" DisplayName="Add departure date to tokenValues" sap2010:WorkflowViewState.IdRef="AddToCollection`1_24">
          <AddToCollection.Item>
            <InArgument x:TypeArguments="x:String">
              <mca:CSharpValue x:TypeArguments="x:String">tokenValueDateTime.ToString("MM/dd/yyyy")</mca:CSharpValue>
            </InArgument>
          </AddToCollection.Item>
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
          </InArgument>
        </AddToCollection>
      </Sequence>
      <p:CountCollection x:TypeArguments="x:String" DisplayName="Count tokenPlaceholders" sap2010:WorkflowViewState.IdRef="CountCollection`1_1">
        <p:CountCollection.Collection>
          <InArgument x:TypeArguments="scg:ICollection(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
          </InArgument>
        </p:CountCollection.Collection>
        <p:CountCollection.Result>
          <OutArgument x:TypeArguments="x:Int32">
            <mca:CSharpReference x:TypeArguments="x:Int32">collectionSize</mca:CSharpReference>
          </OutArgument>
        </p:CountCollection.Result>
      </p:CountCollection>
      <Assign sap2010:WorkflowViewState.IdRef="Assign_2">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">
            <mca:CSharpReference x:TypeArguments="x:Int32">index</mca:CSharpReference>
          </OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">0</InArgument>
        </Assign.Value>
      </Assign>
      <While DisplayName="Iterate over tokenPlaceholders" sap2010:WorkflowViewState.IdRef="While_1">
        <While.Variables>
          <Variable x:TypeArguments="x:String" Name="placeholder" />
          <Variable x:TypeArguments="x:String" Name="placeholderValue" />
        </While.Variables>
        <While.Condition>
          <mca:CSharpValue x:TypeArguments="x:Boolean">index &lt; collectionSize</mca:CSharpValue>
        </While.Condition>
        <Sequence sap2010:WorkflowViewState.IdRef="Sequence_15">
          <p:GetItemFromCollection x:TypeArguments="x:String" DisplayName="Get item from tokenPlaceholders" sap2010:WorkflowViewState.IdRef="GetItemFromCollection`1_1">
            <p:GetItemFromCollection.Index>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">index</mca:CSharpValue>
              </InArgument>
            </p:GetItemFromCollection.Index>
            <p:GetItemFromCollection.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">placeholder</mca:CSharpReference>
              </OutArgument>
            </p:GetItemFromCollection.Result>
            <InArgument x:TypeArguments="scg:ICollection(x:String)">
              <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenPlaceholders</mca:CSharpValue>
            </InArgument>
          </p:GetItemFromCollection>
          <p:GetItemFromCollection x:TypeArguments="x:String" DisplayName="Get item from tokenValues" sap2010:WorkflowViewState.IdRef="GetItemFromCollection`1_2">
            <p:GetItemFromCollection.Index>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">index</mca:CSharpValue>
              </InArgument>
            </p:GetItemFromCollection.Index>
            <p:GetItemFromCollection.Result>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">placeholderValue</mca:CSharpReference>
              </OutArgument>
            </p:GetItemFromCollection.Result>
            <InArgument x:TypeArguments="scg:ICollection(x:String)">
              <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">tokenValues</mca:CSharpValue>
            </InArgument>
          </p:GetItemFromCollection>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_4">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">submittedEmailSubject</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">submittedEmailSubject.Replace(placeholder, placeholderValue);</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_5">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">
                <mca:CSharpReference x:TypeArguments="x:String">submittedEmailContent</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">submittedEmailContent.Replace(placeholder, placeholderValue);</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
          <Assign sap2010:WorkflowViewState.IdRef="Assign_3">
            <Assign.To>
              <OutArgument x:TypeArguments="x:Int32">
                <mca:CSharpReference x:TypeArguments="x:Int32">index</mca:CSharpReference>
              </OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:Int32">
                <mca:CSharpValue x:TypeArguments="x:Int32">index + 1</mca:CSharpValue>
              </InArgument>
            </Assign.Value>
          </Assign>
        </Sequence>
      </While>
    </Sequence>
    <Sequence DisplayName="Send EIF Submitted Alert" sap2010:WorkflowViewState.IdRef="Sequence_16">
      <Sequence.Variables>
        <Variable x:TypeArguments="sco:Collection(x:String)" Name="toCollection" />
        <Variable x:TypeArguments="sco:Collection(x:String)" Name="ccCollection" />
      </Sequence.Variables>
      <p:BuildCollection x:TypeArguments="x:String" DisplayName="Build email To collection" sap2010:WorkflowViewState.IdRef="BuildCollection`1_3">
        <p:BuildCollection.Collection>
          <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">toCollection</mca:CSharpValue>
          </InArgument>
        </p:BuildCollection.Collection>
        <p:BuildCollection.Result>
          <OutArgument x:TypeArguments="sco:Collection(x:String)">
            <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">toCollection</mca:CSharpReference>
          </OutArgument>
        </p:BuildCollection.Result>
        <p:BuildCollection.Values>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">requesterLoginName</mca:CSharpValue>
          </InArgument>
        </p:BuildCollection.Values>
      </p:BuildCollection>
      <p:BuildCollection x:TypeArguments="x:String" DisplayName="Build email Cc collection" sap2010:WorkflowViewState.IdRef="BuildCollection`1_4">
        <p:BuildCollection.Collection>
          <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
            <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">ccCollection</mca:CSharpValue>
          </InArgument>
        </p:BuildCollection.Collection>
        <p:BuildCollection.Result>
          <OutArgument x:TypeArguments="sco:Collection(x:String)">
            <mca:CSharpReference x:TypeArguments="sco:Collection(x:String)">ccCollection</mca:CSharpReference>
          </OutArgument>
        </p:BuildCollection.Result>
        <p:BuildCollection.Values>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">staffResponsibleLoginName</mca:CSharpValue>
          </InArgument>
        </p:BuildCollection.Values>
      </p:BuildCollection>
      <If DisplayName="If additionalStaffMemberLoginName is not empty" sap2010:WorkflowViewState.IdRef="If_15">
        <If.Condition>
          <InArgument x:TypeArguments="x:Boolean">
            <mca:CSharpValue x:TypeArguments="x:Boolean">!string.IsNullOrEmpty(additionalStaffMemberLoginName)</mca:CSharpValue>
          </InArgument>
        </If.Condition>
        <If.Then>
          <AddToCollection x:TypeArguments="x:String" DisplayName="Add additional staff member login name to toCollection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_34">
            <AddToCollection.Item>
              <InArgument x:TypeArguments="x:String">
                <mca:CSharpValue x:TypeArguments="x:String">additionalStaffMemberLoginName</mca:CSharpValue>
              </InArgument>
            </AddToCollection.Item>
            <InArgument x:TypeArguments="scg:ICollection(x:String)">
              <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">ccCollection</mca:CSharpValue>
            </InArgument>
          </AddToCollection>
        </If.Then>
      </If>
      <Sequence DisplayName="Get GSS Approvers emails" sap2010:WorkflowViewState.IdRef="Sequence_28">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" Name="gssApproversGroupId" />
          <Variable x:TypeArguments="p:DynamicValue" Name="properties" />
          <Variable x:TypeArguments="x:Int32" Name="membersCount" />
          <Variable x:TypeArguments="x:Int32" Name="index" />
        </Sequence.Variables>
        <p1:LookupSPPrincipalId AddToUserInfoList="{x:Null}" DisplayName="Get GSS Approvers Group Id" sap2010:WorkflowViewState.IdRef="LookupSPPrincipalId_1" UserName="GSS Approvers">
          <p1:LookupSPPrincipalId.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">gssApproversGroupId</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPPrincipalId.Result>
        </p1:LookupSPPrincipalId>
        <p1:LookupSPGroupMembers DisplayName="Lookup GSS Approvers members" sap2010:WorkflowViewState.IdRef="LookupSPGroupMembers_1">
          <p1:LookupSPGroupMembers.GroupPrincipalId>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">gssApproversGroupId</mca:CSharpValue>
            </InArgument>
          </p1:LookupSPGroupMembers.GroupPrincipalId>
          <p1:LookupSPGroupMembers.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpReference>
            </OutArgument>
          </p1:LookupSPGroupMembers.Result>
        </p1:LookupSPGroupMembers>
        <p:GetDynamicValueProperty x:TypeArguments="p:DynamicValue" DisplayName="Get GSS Members" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_9" PropertyName="d/results">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpReference x:TypeArguments="p:DynamicValue">properties</mca:CSharpReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p:CountDynamicValueItems DisplayName="Count GSS Members" sap2010:WorkflowViewState.IdRef="CountDynamicValueItems_2">
          <p:CountDynamicValueItems.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">membersCount</mca:CSharpReference>
            </OutArgument>
          </p:CountDynamicValueItems.Result>
          <InArgument x:TypeArguments="p:DynamicValue">
            <mca:CSharpValue x:TypeArguments="p:DynamicValue">properties</mca:CSharpValue>
          </InArgument>
        </p:CountDynamicValueItems>
        <Assign DisplayName="Initialize index" sap2010:WorkflowViewState.IdRef="Assign_11">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">
              <mca:CSharpReference x:TypeArguments="x:Int32">index</mca:CSharpReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">
              <mca:CSharpValue x:TypeArguments="x:Int32">0;</mca:CSharpValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <While DisplayName="Iterate over GSS group members" sap2010:WorkflowViewState.IdRef="While_3">
          <While.Variables>
            <Variable x:TypeArguments="x:String" Name="memberLoginName" />
          </While.Variables>
          <While.Condition>
            <mca:CSharpValue x:TypeArguments="x:Boolean">index &lt; membersCount</mca:CSharpValue>
          </While.Condition>
          <Sequence sap2010:WorkflowViewState.IdRef="Sequence_29">
            <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Member LoginName" sap2010:WorkflowViewState.IdRef="GetDynamicValueProperty`1_10">
              <p:GetDynamicValueProperty.PropertyName>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">string.Format("d/results({0})/LoginName", index);</mca:CSharpValue>
                </InArgument>
              </p:GetDynamicValueProperty.PropertyName>
              <p:GetDynamicValueProperty.Result>
                <OutArgument x:TypeArguments="x:String">
                  <mca:CSharpReference x:TypeArguments="x:String">memberLoginName</mca:CSharpReference>
                </OutArgument>
              </p:GetDynamicValueProperty.Result>
              <p:GetDynamicValueProperty.Source>
                <InArgument x:TypeArguments="p:DynamicValue">
                  <mca:CSharpValue x:TypeArguments="p:DynamicValue">dynamicValue</mca:CSharpValue>
                </InArgument>
              </p:GetDynamicValueProperty.Source>
            </p:GetDynamicValueProperty>
            <AddToCollection x:TypeArguments="x:String" DisplayName="Add member login name to ccCollection" sap2010:WorkflowViewState.IdRef="AddToCollection`1_27">
              <AddToCollection.Item>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">memberLoginName</mca:CSharpValue>
                </InArgument>
              </AddToCollection.Item>
              <InArgument x:TypeArguments="scg:ICollection(x:String)">
                <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">ccCollection</mca:CSharpValue>
              </InArgument>
            </AddToCollection>
            <Assign DisplayName="Increment index" sap2010:WorkflowViewState.IdRef="Assign_12">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">
                  <mca:CSharpReference x:TypeArguments="x:Int32">index</mca:CSharpReference>
                </OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">
                  <mca:CSharpValue x:TypeArguments="x:Int32">index + 1;</mca:CSharpValue>
                </InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </While>
      </Sequence>
      <Sequence DisplayName="Add Country Directors to Cc" sap2010:WorkflowViewState.IdRef="Sequence_30">
        <ForEach x:TypeArguments="x:String" DisplayName="ForEach Country Director Login Name" sap2010:WorkflowViewState.IdRef="ForEach`1_1">
          <ForEach.Values>
            <InArgument x:TypeArguments="scg:IEnumerable(x:String)">
              <mca:CSharpValue x:TypeArguments="scg:IEnumerable(x:String)">countryDirectorsLoginNames</mca:CSharpValue>
            </InArgument>
          </ForEach.Values>
          <ActivityAction x:TypeArguments="x:String">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:String" Name="cdLoginName" />
            </ActivityAction.Argument>
            <AddToCollection x:TypeArguments="x:String" DisplayName="Add Country Director Login Name to Cc" sap2010:WorkflowViewState.IdRef="AddToCollection`1_29">
              <AddToCollection.Item>
                <InArgument x:TypeArguments="x:String">
                  <mca:CSharpValue x:TypeArguments="x:String">cdLoginName</mca:CSharpValue>
                </InArgument>
              </AddToCollection.Item>
              <InArgument x:TypeArguments="scg:ICollection(x:String)">
                <mca:CSharpValue x:TypeArguments="scg:ICollection(x:String)">ccCollection</mca:CSharpValue>
              </InArgument>
            </AddToCollection>
          </ActivityAction>
        </ForEach>
      </Sequence>
      <p1:Email AdditionalHeaders="{x:Null}" BCC="{x:Null}" DisplayName="Send Submitted Email Alert" sap2010:WorkflowViewState.IdRef="Email_1">
        <p1:Email.Body>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">submittedEmailContent</mca:CSharpValue>
          </InArgument>
        </p1:Email.Body>
        <p1:Email.CC>
          <InArgument x:TypeArguments="sco:Collection(x:String)">
            <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">ccCollection</mca:CSharpValue>
          </InArgument>
        </p1:Email.CC>
        <p1:Email.Subject>
          <InArgument x:TypeArguments="x:String">
            <mca:CSharpValue x:TypeArguments="x:String">submittedEmailSubject</mca:CSharpValue>
          </InArgument>
        </p1:Email.Subject>
        <p1:Email.To>
          <InArgument x:TypeArguments="sco:Collection(x:String)">
            <mca:CSharpValue x:TypeArguments="sco:Collection(x:String)">toCollection</mca:CSharpValue>
          </InArgument>
        </p1:Email.To>
      </p1:Email>
    </Sequence>
    <sads:DebugSymbol.Symbol>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</sads:DebugSymbol.Symbol>
  </Sequence>
  <sap2010:WorkflowViewState.ViewStateManager>
    <sap2010:ViewStateManager>
      <sap2010:ViewStateData Id="WebUri_1" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="BuildCollection`1_1" sap:VirtualizedContainerService.HintSize="534,22" />
      <sap2010:ViewStateData Id="BuildCollection`1_2" sap:VirtualizedContainerService.HintSize="534,22" />
      <sap2010:ViewStateData Id="LookupSPListItemId_1" sap:VirtualizedContainerService.HintSize="247,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="TAR Email Templates" Value="Lists/TAREmailTemplates" />
              <msdad:ViewStateNameValue x:Key="PropertyName" DisplayName="Title" Value="LinkTitle" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_3" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_4" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_1" sap:VirtualizedContainerService.HintSize="247,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItem_1" sap:VirtualizedContainerService.HintSize="247,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="TAR Email Templates" Value="Lists/TAREmailTemplates" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_1" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/TAREmailTemplates</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_4" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_5" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_2" sap:VirtualizedContainerService.HintSize="247,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_3" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItemId_2" sap:VirtualizedContainerService.HintSize="247,68">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="TAR Settings" Value="Lists/TARSettings" />
              <msdad:ViewStateNameValue x:Key="PropertyName" DisplayName="Title" Value="LinkTitle" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItem_3" sap:VirtualizedContainerService.HintSize="247,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="TAR Settings" Value="Lists/TARSettings" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetODataProperties_4" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">Lists/TARSettings</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_27" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPListItem_2" sap:VirtualizedContainerService.HintSize="200,89">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <scg:Dictionary x:TypeArguments="x:String, msdad:ViewStateNameValue" x:Key="SPLocalizedDisplayNames">
              <msdad:ViewStateNameValue x:Key="ItemId" DisplayName="(current item)" Value="$CurrentItemId" />
              <msdad:ViewStateNameValue x:Key="ListId" DisplayName="(current list)" Value="$CurrentListId" />
            </scg:Dictionary>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="IsEmptyDynamicValue_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteToHistory_5" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_7" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_3" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_6" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_1" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="LookupSPUser_1" sap:VirtualizedContainerService.HintSize="469,89" />
      <sap2010:ViewStateData Id="GetODataProperties_2" sap:VirtualizedContainerService.HintSize="469,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">SharePoint_User</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_6" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_9" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_4" sap:VirtualizedContainerService.HintSize="469,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_7" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_10" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_1" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_2" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_11" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_5" sap:VirtualizedContainerService.HintSize="469,482">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_8" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_2" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_3" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="Assign_1" sap:VirtualizedContainerService.HintSize="469,62" />
      <sap2010:ViewStateData Id="WriteToHistory_8" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_13" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_5" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_6" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_14" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_6" sap:VirtualizedContainerService.HintSize="469,482">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_12" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_14" sap:VirtualizedContainerService.HintSize="536,22" />
      <sap2010:ViewStateData Id="LookupSPUser_4" sap:VirtualizedContainerService.HintSize="247,89" />
      <sap2010:ViewStateData Id="GetODataProperties_6" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">SharePoint_User</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_37" sap:VirtualizedContainerService.HintSize="269,345">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Assign_16" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_14" sap:VirtualizedContainerService.HintSize="536,495">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_36" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="WriteToHistory_9" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_7" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_18" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_10" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_11" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_12" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_19" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_7" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_17" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_13" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_32" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_32" sap:VirtualizedContainerService.HintSize="469,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_33" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_33" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_31" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_34" sap:VirtualizedContainerService.HintSize="222,146">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_13" sap:VirtualizedContainerService.HintSize="469,296" />
      <sap2010:ViewStateData Id="Sequence_35" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_5" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="LookupSPUser_2" sap:VirtualizedContainerService.HintSize="247,89" />
      <sap2010:ViewStateData Id="GetODataProperties_3" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">SharePoint_User</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="WriteToHistory_10" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_21" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_13" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_14" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_15" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_16" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_22" sap:VirtualizedContainerService.HintSize="222,332">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_8" sap:VirtualizedContainerService.HintSize="247,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_20" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_6" sap:VirtualizedContainerService.HintSize="512,22" />
      <sap2010:ViewStateData Id="ParseDynamicValue_1" sap:VirtualizedContainerService.HintSize="512,22" />
      <sap2010:ViewStateData Id="CountDynamicValueItems_1" sap:VirtualizedContainerService.HintSize="512,22" />
      <sap2010:ViewStateData Id="WriteToHistory_11" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="TerminateWorkflow_9" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_23" sap:VirtualizedContainerService.HintSize="222,254">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_9" sap:VirtualizedContainerService.HintSize="512,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildCollection`1_5" sap:VirtualizedContainerService.HintSize="512,22" />
      <sap2010:ViewStateData Id="Assign_6" sap:VirtualizedContainerService.HintSize="512,62" />
      <sap2010:ViewStateData Id="Assign_7" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Assign_13" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_7" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="Assign_14" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_15" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="If_11" sap:VirtualizedContainerService.HintSize="464,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_12" sap:VirtualizedContainerService.HintSize="464,22" />
      <sap2010:ViewStateData Id="LookupSPUser_3" sap:VirtualizedContainerService.HintSize="247,89" />
      <sap2010:ViewStateData Id="GetODataProperties_5" sap:VirtualizedContainerService.HintSize="247,92">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:String x:Key="Properties.SelectedEntityType">SharePoint_User</x:String>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_28" sap:VirtualizedContainerService.HintSize="247,22" />
      <sap2010:ViewStateData Id="Sequence_31" sap:VirtualizedContainerService.HintSize="269,407">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="If_12" sap:VirtualizedContainerService.HintSize="464,557" />
      <sap2010:ViewStateData Id="Assign_10" sap:VirtualizedContainerService.HintSize="464,62" />
      <sap2010:ViewStateData Id="Sequence_24" sap:VirtualizedContainerService.HintSize="486,1202">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_2" sap:VirtualizedContainerService.HintSize="512,1362">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_17" sap:VirtualizedContainerService.HintSize="512,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_18" sap:VirtualizedContainerService.HintSize="512,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_19" sap:VirtualizedContainerService.HintSize="512,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_20" sap:VirtualizedContainerService.HintSize="512,22" />
      <sap2010:ViewStateData Id="Sequence_25" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_8" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_21" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_22" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_23" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_24" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="Sequence_26" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="CountCollection`1_1" sap:VirtualizedContainerService.HintSize="534,22" />
      <sap2010:ViewStateData Id="Assign_2" sap:VirtualizedContainerService.HintSize="534,62" />
      <sap2010:ViewStateData Id="GetItemFromCollection`1_1" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="GetItemFromCollection`1_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_4" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_5" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Assign_3" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_15" sap:VirtualizedContainerService.HintSize="264,514">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_1" sap:VirtualizedContainerService.HintSize="534,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_2" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="BuildCollection`1_3" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="BuildCollection`1_4" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_34" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="If_15" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="LookupSPPrincipalId_1" sap:VirtualizedContainerService.HintSize="242,68" />
      <sap2010:ViewStateData Id="LookupSPGroupMembers_1" sap:VirtualizedContainerService.HintSize="242,68" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_9" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="CountDynamicValueItems_2" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_11" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="GetDynamicValueProperty`1_10" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="AddToCollection`1_27" sap:VirtualizedContainerService.HintSize="242,22" />
      <sap2010:ViewStateData Id="Assign_12" sap:VirtualizedContainerService.HintSize="242,62" />
      <sap2010:ViewStateData Id="Sequence_29" sap:VirtualizedContainerService.HintSize="264,310">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="While_3" sap:VirtualizedContainerService.HintSize="242,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_28" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="AddToCollection`1_29" sap:VirtualizedContainerService.HintSize="200,22" />
      <sap2010:ViewStateData Id="ForEach`1_1" sap:VirtualizedContainerService.HintSize="287,210" />
      <sap2010:ViewStateData Id="Sequence_30" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Email_1" sap:VirtualizedContainerService.HintSize="200,68" />
      <sap2010:ViewStateData Id="Sequence_16" sap:VirtualizedContainerService.HintSize="200,51">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">False</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="Sequence_1" sap:VirtualizedContainerService.HintSize="222,374">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </sap2010:ViewStateData>
      <sap2010:ViewStateData Id="SCI.TAR.Workflows.EIFWorkflow.Workflow_1" sap:VirtualizedContainerService.HintSize="262,454" />
    </sap2010:ViewStateManager>
  </sap2010:WorkflowViewState.ViewStateManager>
</Activity>