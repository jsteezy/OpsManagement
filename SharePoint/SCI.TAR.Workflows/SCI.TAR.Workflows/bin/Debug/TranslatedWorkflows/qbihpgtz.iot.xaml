<Activity mc:Ignorable="sads" x:Class="SCI.TAR.Workflows.TARArchivingWorkflow.Workflow"
 xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities"
 xmlns:made="clr-namespace:Microsoft.Activities.Design.ExpressionTranslation;assembly=Microsoft.Activities.Design"
 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
 xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities"
 xmlns:p="http://schemas.microsoft.com/workflow/2012/07/xaml/activities"
 xmlns:p1="wf://workflow.windows.net/$Activities"
 xmlns:s="clr-namespace:System;assembly=mscorlib"
 xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger"
 xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib"
 xmlns:sn="clr-namespace:System.Net;assembly=System"
 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <Sequence DisplayName="Main Sequence" sads:DebugSymbol.Symbol="d2lEOlxQcm9qZWN0c1xTQ0kuVEFSXHRhclxTaGFyZVBvaW50XFNDSS5UQVIuV29ya2Zsb3dzXFNDSS5UQVIuV29ya2Zsb3dzXFRBUkFyY2hpdmluZ1dvcmtmbG93XFdvcmtmbG93LnhhbWw3NQP/Bg4CAQE9BUMRAwGDA0QFnwEQAwHeAqABBbQBEgMB1QK1AQXAASEDAc8CwQEFygEgAwHKAssBBdYBDgMBxgLXAQX9Bg0CAQJFB54BEgMB3wKjAQunASkDAdwC4AEH/AYSAgEGSwlbIQMB/QJcCWgOAwH1AmkJeR8DAe8CegmFASADAeoChgEJkQESAwHlApIBCZ0BEgMB4ALtAQmCAhYDAb0CgwIJjgIlAwG3Ao8CCZoCEgMBsgKbAgmrAiUDAasCrAIJtwIlAwGlArgCCcMCJQMBnwLEAgnPAhIDAZoC0AIJ2wISAwGVAtwCCYUFFAIBcIYFCasFFgIBXqwFCe8GDgIBDPAGCfsGEgIBB2MNZhgDAfgC8AEP9QEtAwHDAoYDC4MEIgMBxAGEBAuEBSECAXGOBQ+ZBS0CAWmzBQ3tBhgCAQ9kD2SnAQMB+wJlD2WoAQMB+QK0BQ/MBRwCAVLNBQ/sBhQCARC3BRW/BTMCAVnUBRPaBScCAU/dBRPqBh4CARPjBRX3BSICAUb4BRWDBjECAUCEBhWNBjACATuOBhWZBh4CATeaBhXpBh0CARTmBRvqBTkCAU2eBhfoBiICARiiBhmyBjUCATCzBhnLBiYCASTMBhnbBh4CAR7cBhnnBiICARm2Bh++Bj0CASvTBh3ZBjECASE=">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:String" x:Name="__ReferenceID0" Name="webUrl" />
      <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID5" Name="restResponse" />
      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID6" Name="itemsCount" />
      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID7" Name="index" />
      <Variable x:TypeArguments="s:DateTime" x:Name="__ReferenceID4" Name="dateThreshold" />
    </Sequence.Variables>
    <p1:WebUri DisplayName="Get Web URL">
      <p1:WebUri.Result>
        <OutArgument x:TypeArguments="x:String">
          <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="webUrl">
            <p:ExpressionContainerReference.Arguments>
              <InOutArgument x:TypeArguments="x:String" x:Key="webUrl">
                <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID0}" />
              </InOutArgument>
            </p:ExpressionContainerReference.Arguments>
            <ArgumentReference x:TypeArguments="x:String" ArgumentName="webUrl" />
          </p:ExpressionContainerReference>
        </OutArgument>
      </p1:WebUri.Result>
    </p1:WebUri>
    <Sequence DisplayName="Initialization">
      <Sequence DisplayName="Get Storage Threshold Months">
        <Sequence.Variables>
          <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID1" Name="settingItemId" />
          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID2" Name="settingDynamicValue" />
          <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID3" Name="monthsThreshold" />
        </Sequence.Variables>
        <p1:LookupSPListItemId DisplayName="Lookup TAR Setting Id" PropertyValue="TAR_StorageMonths">
          <p1:LookupSPListItemId.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <p:ExpressionContainerValue x:TypeArguments="s:Guid" DisplayName="System.Guid.Parse(&quot;{$ListId:Lists/TARSettings;}&quot;)">
                <p:ParseGuid Value="{}{$ListId:Lists/TARSettings;}" />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItemId.ListId>
          <p1:LookupSPListItemId.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="&quot;Title&quot;" Expression="Title" />
            </InArgument>
          </p1:LookupSPListItemId.PropertyName>
          <p1:LookupSPListItemId.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="settingItemId">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:Int32" x:Key="settingItemId">
                    <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID1}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="settingItemId" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </p1:LookupSPListItemId.Result>
        </p1:LookupSPListItemId>
        <If DisplayName="If there is no storage threshold setting">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="settingItemId &lt; 1">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="settingItemId">
                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID1}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:IsLessThan x:TypeArguments="x:Int32">
                  <p:IsLessThan.Left>
                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                      <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="settingItemId" />
                    </InArgument>
                  </p:IsLessThan.Left>
                  <p:IsLessThan.Right>
                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="1" />
                  </p:IsLessThan.Right>
                </p:IsLessThan>
              </p:ExpressionContainerValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence>
              <p1:WriteToHistory Message="Item with title TAR_StorageMonths was not found in TAR Settings list" />
              <TerminateWorkflow Reason="Item with title TAR_StorageMonths was not found in TAR Settings list" />
            </Sequence>
          </If.Then>
        </If>
        <p1:LookupSPListItem ItemGuid="{x:Null}" Properties="{x:Null}" DisplayName="Lookup TAR Setting">
          <p1:LookupSPListItem.ItemId>
            <InArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="settingItemId">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="settingItemId">
                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID1}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="settingItemId" />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ItemId>
          <p1:LookupSPListItem.ListId>
            <InArgument x:TypeArguments="s:Guid">
              <p:ExpressionContainerValue x:TypeArguments="s:Guid" DisplayName="System.Guid.Parse(&quot;{$ListId:Lists/TARSettings;}&quot;)">
                <p:ParseGuid Value="{}{$ListId:Lists/TARSettings;}" />
              </p:ExpressionContainerValue>
            </InArgument>
          </p1:LookupSPListItem.ListId>
          <p1:LookupSPListItem.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="settingDynamicValue">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="settingDynamicValue">
                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID2}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="settingDynamicValue" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </p1:LookupSPListItem.Result>
        </p1:LookupSPListItem>
        <p:GetODataProperties DisplayName="Get Storage Threshold Months">
          <p:GetODataProperties.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="settingDynamicValue">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="settingDynamicValue">
                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID2}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="settingDynamicValue" />
              </p:ExpressionContainerValue>
            </InArgument>
          </p:GetODataProperties.Source>
          <scg:Dictionary x:TypeArguments="x:String, OutArgument">
            <OutArgument x:TypeArguments="x:Int32" x:Key="TAR_SettingValue">
              <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="monthsThreshold">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:Int32" x:Key="monthsThreshold">
                    <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID3}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="monthsThreshold" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </scg:Dictionary>
        </p:GetODataProperties>
        <Assign DisplayName="Negate months threshold">
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="monthsThreshold">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:Int32" x:Key="monthsThreshold">
                    <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID3}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="monthsThreshold" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="0 - monthsThreshold;">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="monthsThreshold">
                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID3}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:Subtract x:TypeArguments="x:Int32">
                  <p:Subtract.Left>
                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0" Expression="0" />
                  </p:Subtract.Left>
                  <p:Subtract.Right>
                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1">
                      <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="monthsThreshold" />
                    </InArgument>
                  </p:Subtract.Right>
                </p:Subtract>
              </p:ExpressionContainerValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Compute date threshold">
          <Assign.To>
            <OutArgument x:TypeArguments="s:DateTime">
              <p:ExpressionContainerReference x:TypeArguments="s:DateTime" DisplayName="dateThreshold">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="s:DateTime" x:Key="dateThreshold">
                    <VariableReference x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID4}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="s:DateTime" ArgumentName="dateThreshold" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:DateTime">
              <p:ExpressionContainerValue x:TypeArguments="s:DateTime" DisplayName="DateTime.UtcNow.AddMonths(monthsThreshold);">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="monthsThreshold">
                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID3}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:AddToDate>
                  <p:AddToDate.Input>
                    <InArgument x:TypeArguments="s:DateTime">
                      <p:CurrentDate />
                    </InArgument>
                  </p:AddToDate.Input>
                  <p:AddToDate.Months>
                    <InArgument x:TypeArguments="x:Int32">
                      <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="monthsThreshold" />
                    </InArgument>
                  </p:AddToDate.Months>
                </p:AddToDate>
              </p:ExpressionContainerValue>
            </InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </Sequence>
    <p:HttpSend DisplayName="Call REST to get finished TARs" Method="GET">
      <p:HttpSend.RequestHeaders>
        <InArgument x:TypeArguments="p:DynamicValue">
          <p:SetDynamicValueProperties>
            <scg:Dictionary x:TypeArguments="x:String, InArgument">
              <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
            </scg:Dictionary>
          </p:SetDynamicValueProperties>
        </InArgument>
      </p:HttpSend.RequestHeaders>
      <p:HttpSend.ResponseContent>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="restResponse">
            <p:ExpressionContainerReference.Arguments>
              <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="restResponse">
                <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID5}" />
              </InOutArgument>
            </p:ExpressionContainerReference.Arguments>
            <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="restResponse" />
          </p:ExpressionContainerReference>
        </OutArgument>
      </p:HttpSend.ResponseContent>
      <p:HttpSend.Uri>
        <InArgument x:TypeArguments="x:String">
          <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;{0}/_api/Lists/getByTitle('TAR Requests')/items?$filter=(Created lt datetime'{1}') and ((TAR_BudgetApprovalStatus eq 'Rejected') or ((TAR_RequiresGssApproval eq 1 and (TAR_GSSApprovalStatus eq 'Approved' or TAR_GSSApprovalStatus eq 'Rejected')) or (TAR_RequiresGssApproval eq 0 and TAR_BudgetApprovalStatus eq 'Approved')))&quot;, webUrl, dateThreshold.ToString(&quot;s&quot;));">
            <p:ExpressionContainerValue.Arguments>
              <InArgument x:TypeArguments="x:Object" x:Key="webUrl">
                <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID0}" />
              </InArgument>
              <InArgument x:TypeArguments="x:Object" x:Key="dateThreshold">
                <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID4}" />
              </InArgument>
            </p:ExpressionContainerValue.Arguments>
            <p:FormatString Format="{}{0}/_api/Lists/getByTitle('TAR Requests')/items?$filter=(Created lt datetime'{1}') and ((TAR_BudgetApprovalStatus eq 'Rejected') or ((TAR_RequiresGssApproval eq 1 and (TAR_GSSApprovalStatus eq 'Approved' or TAR_GSSApprovalStatus eq 'Rejected')) or (TAR_RequiresGssApproval eq 0 and TAR_BudgetApprovalStatus eq 'Approved')))">
              <InArgument x:TypeArguments="x:Object">
                <ArgumentValue x:TypeArguments="x:Object" ArgumentName="webUrl" />
              </InArgument>
              <InArgument x:TypeArguments="x:Object">
                <p:Convert x:TypeArguments="x:String, x:Object">
                  <InArgument x:TypeArguments="x:String">
                    <p:ToString CultureName="{x:Null}" Format="s">
                      <p:ToString.Result>
                        <OutArgument x:TypeArguments="x:String" />
                      </p:ToString.Result>
                      <InArgument x:TypeArguments="x:Object">
                        <ArgumentValue x:TypeArguments="x:Object" ArgumentName="dateThreshold" />
                      </InArgument>
                    </p:ToString>
                  </InArgument>
                </p:Convert>
              </InArgument>
            </p:FormatString>
          </p:ExpressionContainerValue>
        </InArgument>
      </p:HttpSend.Uri>
    </p:HttpSend>
    <p:GetDynamicValueProperty x:TypeArguments="p:DynamicValue" DisplayName="Get d/results from REST response" PropertyName="d/results">
      <p:GetDynamicValueProperty.Result>
        <OutArgument x:TypeArguments="p:DynamicValue">
          <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="restResponse">
            <p:ExpressionContainerReference.Arguments>
              <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="restResponse">
                <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID5}" />
              </InOutArgument>
            </p:ExpressionContainerReference.Arguments>
            <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="restResponse" />
          </p:ExpressionContainerReference>
        </OutArgument>
      </p:GetDynamicValueProperty.Result>
      <p:GetDynamicValueProperty.Source>
        <InArgument x:TypeArguments="p:DynamicValue">
          <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="restResponse">
            <p:ExpressionContainerValue.Arguments>
              <InArgument x:TypeArguments="p:DynamicValue" x:Key="restResponse">
                <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID5}" />
              </InArgument>
            </p:ExpressionContainerValue.Arguments>
            <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="restResponse" />
          </p:ExpressionContainerValue>
        </InArgument>
      </p:GetDynamicValueProperty.Source>
    </p:GetDynamicValueProperty>
    <p:CountDynamicValueItems DisplayName="Count finished TAR items">
      <p:CountDynamicValueItems.Result>
        <OutArgument x:TypeArguments="x:Int32">
          <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="itemsCount">
            <p:ExpressionContainerReference.Arguments>
              <InOutArgument x:TypeArguments="x:Int32" x:Key="itemsCount">
                <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID6}" />
              </InOutArgument>
            </p:ExpressionContainerReference.Arguments>
            <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="itemsCount" />
          </p:ExpressionContainerReference>
        </OutArgument>
      </p:CountDynamicValueItems.Result>
      <InArgument x:TypeArguments="p:DynamicValue">
        <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="restResponse">
          <p:ExpressionContainerValue.Arguments>
            <InArgument x:TypeArguments="p:DynamicValue" x:Key="restResponse">
              <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID5}" />
            </InArgument>
          </p:ExpressionContainerValue.Arguments>
          <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="restResponse" />
        </p:ExpressionContainerValue>
      </InArgument>
    </p:CountDynamicValueItems>
    <Assign DisplayName="Initialize index">
      <Assign.To>
        <OutArgument x:TypeArguments="x:Int32">
          <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="index">
            <p:ExpressionContainerReference.Arguments>
              <InOutArgument x:TypeArguments="x:Int32" x:Key="index">
                <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID7}" />
              </InOutArgument>
            </p:ExpressionContainerReference.Arguments>
            <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="index" />
          </p:ExpressionContainerReference>
        </OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:Int32">
          <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="0;" Expression="0" />
        </InArgument>
      </Assign.Value>
    </Assign>
    <While DisplayName="Iterate over TARs">
      <While.Variables>
        <Variable x:TypeArguments="x:String" x:Name="__ReferenceID10" Name="tarQuery" />
        <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID13" Name="tarId" />
        <Variable x:TypeArguments="x:String" x:Name="__ReferenceID16" Name="tarTitle" />
      </While.Variables>
      <While.Condition>
        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="index &lt; itemsCount">
          <p:ExpressionContainerValue.Arguments>
            <InArgument x:TypeArguments="x:Int32" x:Key="index">
              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID7}" />
            </InArgument>
            <InArgument x:TypeArguments="x:Int32" x:Key="itemsCount">
              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID6}" />
            </InArgument>
          </p:ExpressionContainerValue.Arguments>
          <p:IsLessThan x:TypeArguments="x:Int32">
            <p:IsLessThan.Left>
              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="index" />
              </InArgument>
            </p:IsLessThan.Left>
            <p:IsLessThan.Right>
              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1">
                <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="itemsCount" />
              </InArgument>
            </p:IsLessThan.Right>
          </p:IsLessThan>
        </p:ExpressionContainerValue>
      </While.Condition>
      <Sequence>
        <Sequence.Variables>
          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID11" Name="tarDetails" />
          <Variable x:TypeArguments="s:DateTime" x:Name="__ReferenceID12" Name="tarCreationDate" />
          <Variable x:TypeArguments="x:String" x:Name="__ReferenceID14" Name="archiveListName" />
          <Variable x:TypeArguments="x:String" x:Name="__ReferenceID56" Name="postResponse" />
          <Variable x:TypeArguments="x:String" x:Name="__ReferenceID15" Name="archiveListItemName" />
          <Variable x:TypeArguments="p:DynamicValue" Name="tarRequestBody" />
          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID55" Name="newTarDetails" />
          <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID8" Name="renewDigestResponse" />
          <Variable x:TypeArguments="x:String" x:Name="__ReferenceID9" Name="formDigest" />
          <Variable x:TypeArguments="sn:HttpStatusCode" x:Name="__ReferenceID57" Name="postResponseStatusCode" />
        </Sequence.Variables>
        <p:HttpSend Method="POST">
          <p:HttpSend.RequestHeaders>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:SetDynamicValueProperties>
                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json; odata=verbose</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json; odata=verbose</InArgument>
                </scg:Dictionary>
              </p:SetDynamicValueProperties>
            </InArgument>
          </p:HttpSend.RequestHeaders>
          <p:HttpSend.ResponseContent>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="renewDigestResponse">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="renewDigestResponse">
                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID8}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="renewDigestResponse" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </p:HttpSend.ResponseContent>
          <p:HttpSend.Uri>
            <InArgument x:TypeArguments="x:String">
              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;{0}/_api/contextinfo&quot;, webUrl);">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:Object" x:Key="webUrl">
                    <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID0}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:FormatString Format="{}{0}/_api/contextinfo">
                  <InArgument x:TypeArguments="x:Object">
                    <ArgumentValue x:TypeArguments="x:Object" ArgumentName="webUrl" />
                  </InArgument>
                </p:FormatString>
              </p:ExpressionContainerValue>
            </InArgument>
          </p:HttpSend.Uri>
        </p:HttpSend>
        <p:GetDynamicValueProperty x:TypeArguments="x:String" DisplayName="Get Form Digest Value" PropertyName="d/GetContextWebInformation/FormDigestValue">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:String">
              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="formDigest">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:String" x:Key="formDigest">
                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID9}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:String" ArgumentName="formDigest" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="renewDigestResponse">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="renewDigestResponse">
                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID8}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="renewDigestResponse" />
              </p:ExpressionContainerValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <Assign>
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarQuery">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:String" x:Key="tarQuery">
                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID10}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarQuery" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;({0})&quot;, index);">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="index">
                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID7}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:FormatString Format="({0})">
                  <InArgument x:TypeArguments="x:Object">
                    <p:Convert x:TypeArguments="x:Int32, x:Object">
                      <InArgument x:TypeArguments="x:Int32">
                        <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="index" />
                      </InArgument>
                    </p:Convert>
                  </InArgument>
                </p:FormatString>
              </p:ExpressionContainerValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <p:GetDynamicValueProperty x:TypeArguments="p:DynamicValue" DisplayName="Get current TAR ">
          <p:GetDynamicValueProperty.PropertyName>
            <InArgument x:TypeArguments="x:String">
              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarQuery">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="tarQuery">
                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID10}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarQuery" />
              </p:ExpressionContainerValue>
            </InArgument>
          </p:GetDynamicValueProperty.PropertyName>
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="p:DynamicValue">
              <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="tarDetails">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="tarDetails">
                    <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID11}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="tarDetails" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="restResponse">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="restResponse">
                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID5}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="restResponse" />
              </p:ExpressionContainerValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p:GetDynamicValueProperty x:TypeArguments="s:DateTime" DisplayName="Get TAR Created Date" PropertyName="Created">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="s:DateTime">
              <p:ExpressionContainerReference x:TypeArguments="s:DateTime" DisplayName="tarCreationDate">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="s:DateTime" x:Key="tarCreationDate">
                    <VariableReference x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID12}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="s:DateTime" ArgumentName="tarCreationDate" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="tarDetails">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="tarDetails">
                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID11}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="tarDetails" />
              </p:ExpressionContainerValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <p:GetDynamicValueProperty x:TypeArguments="x:Int32" DisplayName="Get TAR Id" PropertyName="Id">
          <p:GetDynamicValueProperty.Result>
            <OutArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tarId">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:Int32" x:Key="tarId">
                    <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID13}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tarId" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </p:GetDynamicValueProperty.Result>
          <p:GetDynamicValueProperty.Source>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="tarDetails">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="tarDetails">
                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID11}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="tarDetails" />
              </p:ExpressionContainerValue>
            </InArgument>
          </p:GetDynamicValueProperty.Source>
        </p:GetDynamicValueProperty>
        <Assign DisplayName="Assign Archive list name">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="archiveListName">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:String" x:Key="archiveListName">
                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID14}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:String" ArgumentName="archiveListName" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;TAR Requests Archive {0}&quot;, tarCreationDate.Year);">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="s:DateTime" x:Key="tarCreationDate">
                    <VariableValue x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID12}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:FormatString Format="TAR Requests Archive {0}">
                  <InArgument x:TypeArguments="x:Object">
                    <p:Convert x:TypeArguments="x:Int32, x:Object">
                      <InArgument x:TypeArguments="x:Int32">
                        <p:GetDateField DateField="Year">
                          <p:GetDateField.Input>
                            <InArgument x:TypeArguments="s:DateTime">
                              <ArgumentValue x:TypeArguments="s:DateTime" ArgumentName="tarCreationDate" />
                            </InArgument>
                          </p:GetDateField.Input>
                          <p:GetDateField.Result>
                            <OutArgument x:TypeArguments="x:Int32" />
                          </p:GetDateField.Result>
                        </p:GetDateField>
                      </InArgument>
                    </p:Convert>
                  </InArgument>
                </p:FormatString>
              </p:ExpressionContainerValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Assign DisplayName="Assign Archive list item name (for metadata)">
          <Assign.To>
            <OutArgument x:TypeArguments="x:String">
              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="archiveListItemName">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:String" x:Key="archiveListItemName">
                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID15}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:String" ArgumentName="archiveListItemName" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:String">
              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="archiveListName.Replace(&quot; &quot;, string.Empty);">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:String" x:Key="archiveListName">
                    <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID14}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:ReplaceString ExistingValue=" ">
                  <p:ReplaceString.Input>
                    <InArgument x:TypeArguments="x:String">
                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="archiveListName" />
                    </InArgument>
                  </p:ReplaceString.Input>
                  <p:ReplaceString.Replacement>
                    <InArgument x:TypeArguments="x:String">
                      <Literal x:TypeArguments="x:String" Value="" />
                    </InArgument>
                  </p:ReplaceString.Replacement>
                </p:ReplaceString>
              </p:ExpressionContainerValue>
            </InArgument>
          </Assign.Value>
        </Assign>
        <Sequence DisplayName="Build new TAR">
          <Sequence.Variables>
            <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID17" Name="tarRequesterId" />
            <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID18" Name="tarTravellerId" />
            <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID19" Name="tarLineManagerId" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID20" Name="tarEmergencyContacts" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID21" Name="tarTypeOfTravel" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID22" Name="tarVisaRequired" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID23" Name="tarVisaNumber" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID24" Name="tarPhotoId" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID25" Name="tarMedicalEmergencyCard" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID26" Name="tarMedicalProviderName" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID27" Name="tarPolicyNumber" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID28" Name="tarReadPDI" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID29" Name="tarUsaidFunds" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID30" Name="tarVaccination" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID31" Name="tarTravelAdvances" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID32" Name="tarGssTraining" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID33" Name="tarGssTrainingDateString" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID34" Name="tarPurposeOfTravel" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID35" Name="tarApprovedByDirector" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID36" Name="tarHasAppropriateEmergency" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID37" Name="tarDestinations" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID38" Name="tarBudgetSession" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID39" Name="tarOtherEstimatedCosts" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID40" Name="tarBudgetCodes" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID41" Name="tarAdditionalInfo" />
            <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID42" Name="tarTravelCoordinatorId" />
            <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID43" Name="tarBudgetApproverId" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID44" Name="tarInformationRead" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID45" Name="tarLocatedInLondon" />
            <Variable x:TypeArguments="x:Boolean" x:Name="__ReferenceID46" Name="tarRequiresGssApproval" />
            <Variable x:TypeArguments="s:DateTime" x:Name="__ReferenceID47" Name="tarDepartureDate" />
            <Variable x:TypeArguments="x:String" Name="tarReturnDate" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID49" Name="tarBudgetApprovalStatus" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID50" Name="tarBudgetApprovalTimestampString" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID51" Name="tarGssApprovalStatus" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID52" Name="tarGssApprovalTimestampString" />
            <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID53" Name="tarAdditionalStaffMemberId" />
            <Variable x:TypeArguments="x:String" x:Name="__ReferenceID48" Name="tarReturnDateString" />
            <Variable x:TypeArguments="s:DateTime" x:Name="__ReferenceID54" Name="tarCreated" />
          </Sequence.Variables>
          <p:GetODataProperties DisplayName="Get TAR details">
            <p:GetODataProperties.Source>
              <InArgument x:TypeArguments="p:DynamicValue">
                <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="tarDetails">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="p:DynamicValue" x:Key="tarDetails">
                      <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID11}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="tarDetails" />
                </p:ExpressionContainerValue>
              </InArgument>
            </p:GetODataProperties.Source>
            <scg:Dictionary x:TypeArguments="x:String, OutArgument">
              <OutArgument x:TypeArguments="x:String" x:Key="Title">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarTitle">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarTitle">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID16}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarTitle" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="TAR_RequesterId">
                <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tarRequesterId">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="tarRequesterId">
                      <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID17}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tarRequesterId" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="TAR_TravellerId">
                <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tarTravellerId">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="tarTravellerId">
                      <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID18}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tarTravellerId" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="TAR_LineManagerId">
                <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tarLineManagerId">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="tarLineManagerId">
                      <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID19}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tarLineManagerId" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_SelectedEmergencyContacts">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarEmergencyContacts">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarEmergencyContacts">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarEmergencyContacts" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_TypeOfTravel">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarTypeOfTravel">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarTypeOfTravel">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID21}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarTypeOfTravel" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_VisaRequired">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarVisaRequired">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarVisaRequired">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID22}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarVisaRequired" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_VisaNumber">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarVisaNumber">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarVisaNumber">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID23}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarVisaNumber" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_PhotoId">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarPhotoId">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarPhotoId">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarPhotoId" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_MedicalEmergencyCard">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarMedicalEmergencyCard">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarMedicalEmergencyCard">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID25}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarMedicalEmergencyCard" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_MedicalProviderName">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarMedicalProviderName">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarMedicalProviderName">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarMedicalProviderName" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_PolicyNumber">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarPolicyNumber">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarPolicyNumber">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID27}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarPolicyNumber" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_ReadPDI">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarReadPDI">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarReadPDI">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID28}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarReadPDI" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_UsaidFunds">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarUsaidFunds">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarUsaidFunds">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID29}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarUsaidFunds" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_AppropriateVaccination">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarVaccination">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarVaccination">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarVaccination" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_TravelAdvances">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarTravelAdvances">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarTravelAdvances">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID31}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarTravelAdvances" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_GSSTraining">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarGssTraining">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarGssTraining">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID32}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarGssTraining" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_GSSTrainingDate">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarGssTrainingDateString">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarGssTrainingDateString">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarGssTrainingDateString" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_PurposeOfTravel">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarPurposeOfTravel">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarPurposeOfTravel">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarPurposeOfTravel" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_ApprovedByDirector">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarApprovedByDirector">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarApprovedByDirector">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID35}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarApprovedByDirector" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_AppropriateEmergencyContacts">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarHasAppropriateEmergency">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarHasAppropriateEmergency">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID36}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarHasAppropriateEmergency" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_Destinations">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarDestinations">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarDestinations">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID37}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarDestinations" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_BudgetSession">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarBudgetSession">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarBudgetSession">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarBudgetSession" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_OtherEstimatedCosts">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarOtherEstimatedCosts">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarOtherEstimatedCosts">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID39}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarOtherEstimatedCosts" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_BudgetCodes">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarBudgetCodes">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarBudgetCodes">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID40}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarBudgetCodes" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_AdditionalInformation">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarAdditionalInfo">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarAdditionalInfo">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID41}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarAdditionalInfo" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="TAR_TravelCoordinatorId">
                <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tarTravelCoordinatorId">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="tarTravelCoordinatorId">
                      <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID42}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tarTravelCoordinatorId" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="TAR_BudgetApproverId">
                <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tarBudgetApproverId">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="tarBudgetApproverId">
                      <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID43}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tarBudgetApproverId" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_InformationRead">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarInformationRead">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarInformationRead">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID44}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarInformationRead" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_LondonOfficeLocation">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarLocatedInLondon">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarLocatedInLondon">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID45}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarLocatedInLondon" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:Boolean" x:Key="TAR_RequiresGssApproval">
                <p:ExpressionContainerReference x:TypeArguments="x:Boolean" DisplayName="tarRequiresGssApproval">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:Boolean" x:Key="tarRequiresGssApproval">
                      <VariableReference x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID46}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:Boolean" ArgumentName="tarRequiresGssApproval" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="s:DateTime" x:Key="TAR_DepartureDate">
                <p:ExpressionContainerReference x:TypeArguments="s:DateTime" DisplayName="tarDepartureDate">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="s:DateTime" x:Key="tarDepartureDate">
                      <VariableReference x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID47}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="s:DateTime" ArgumentName="tarDepartureDate" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_ReturnDate">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarReturnDateString">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarReturnDateString">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID48}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarReturnDateString" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_BudgetApprovalStatus">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarBudgetApprovalStatus">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarBudgetApprovalStatus">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID49}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarBudgetApprovalStatus" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_BudgetApprovalTimestamp">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarBudgetApprovalTimestampString">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarBudgetApprovalTimestampString">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID50}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarBudgetApprovalTimestampString" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_GSSApprovalStatus">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarGssApprovalStatus">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarGssApprovalStatus">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID51}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarGssApprovalStatus" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:String" x:Key="TAR_GSSApprovalTimestamp">
                <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="tarGssApprovalTimestampString">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:String" x:Key="tarGssApprovalTimestampString">
                      <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID52}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:String" ArgumentName="tarGssApprovalTimestampString" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="x:Int32" x:Key="TAR_AdditionalStaffMemberId">
                <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tarAdditionalStaffMemberId">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="x:Int32" x:Key="tarAdditionalStaffMemberId">
                      <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID53}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tarAdditionalStaffMemberId" />
                </p:ExpressionContainerReference>
              </OutArgument>
              <OutArgument x:TypeArguments="s:DateTime" x:Key="Created">
                <p:ExpressionContainerReference x:TypeArguments="s:DateTime" DisplayName="tarCreated">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="s:DateTime" x:Key="tarCreated">
                      <VariableReference x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID54}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="s:DateTime" ArgumentName="tarCreated" />
                </p:ExpressionContainerReference>
              </OutArgument>
            </scg:Dictionary>
          </p:GetODataProperties>
          <p:BuildDynamicValue DisplayName="Build new TAR details">
            <p:BuildDynamicValue.Result>
              <InOutArgument x:TypeArguments="p:DynamicValue">
                <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="newTarDetails">
                  <p:ExpressionContainerReference.Arguments>
                    <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="newTarDetails">
                      <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID55}" />
                    </InOutArgument>
                  </p:ExpressionContainerReference.Arguments>
                  <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="newTarDetails" />
                </p:ExpressionContainerReference>
              </InOutArgument>
            </p:BuildDynamicValue.Result>
            <scg:Dictionary x:TypeArguments="x:String, InArgument">
              <InArgument x:TypeArguments="x:String" x:Key="__metadata/type">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;SP.Data.{0}ListItem&quot;, archiveListItemName)">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:Object" x:Key="archiveListItemName">
                      <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID15}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <p:FormatString Format="SP.Data.{0}ListItem">
                    <InArgument x:TypeArguments="x:Object">
                      <ArgumentValue x:TypeArguments="x:Object" ArgumentName="archiveListItemName" />
                    </InArgument>
                  </p:FormatString>
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="Title">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarTitle">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarTitle">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID16}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarTitle" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="TAR_RequesterId">
                <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="tarRequesterId">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="tarRequesterId">
                      <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID17}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tarRequesterId" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="TAR_TravellerId">
                <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="tarTravellerId">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="tarTravellerId">
                      <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID18}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tarTravellerId" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="TAR_LineManagerId">
                <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="tarLineManagerId">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="tarLineManagerId">
                      <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID19}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tarLineManagerId" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_SelectedEmergencyContacts">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarEmergencyContacts">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarEmergencyContacts">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID20}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarEmergencyContacts" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_TypeOfTravel">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarTypeOfTravel">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarTypeOfTravel">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID21}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarTypeOfTravel" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_VisaRequired">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarVisaRequired">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarVisaRequired">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID22}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarVisaRequired" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_VisaNumber">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarVisaNumber">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarVisaNumber">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID23}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarVisaNumber" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_PhotoId">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarPhotoId">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarPhotoId">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID24}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarPhotoId" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_MedicalEmergencyCard">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarMedicalEmergencyCard">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarMedicalEmergencyCard">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID25}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarMedicalEmergencyCard" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_MedicalProviderName">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarMedicalProviderName">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarMedicalProviderName">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID26}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarMedicalProviderName" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_PolicyNumber">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarPolicyNumber">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarPolicyNumber">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID27}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarPolicyNumber" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_ReadPDI">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarReadPDI">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarReadPDI">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID28}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarReadPDI" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_UsaidFunds">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarUsaidFunds">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarUsaidFunds">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID29}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarUsaidFunds" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_AppropriateVaccination">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarVaccination">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarVaccination">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID30}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarVaccination" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_TravelAdvances">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarTravelAdvances">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarTravelAdvances">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID31}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarTravelAdvances" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_GSSTraining">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarGssTraining">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarGssTraining">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID32}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarGssTraining" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_GSSTrainingDate">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarGssTrainingDateString">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarGssTrainingDateString">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID33}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarGssTrainingDateString" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_PurposeOfTravel">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarPurposeOfTravel">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarPurposeOfTravel">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID34}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarPurposeOfTravel" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_ApprovedByDirector">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarApprovedByDirector">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarApprovedByDirector">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID35}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarApprovedByDirector" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_AppropriateEmergencyContacts">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarHasAppropriateEmergency">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarHasAppropriateEmergency">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID36}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarHasAppropriateEmergency" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_Destinations">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarDestinations">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarDestinations">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID37}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarDestinations" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_BudgetSession">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarBudgetSession">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarBudgetSession">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID38}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarBudgetSession" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_OtherEstimatedCosts">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarOtherEstimatedCosts">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarOtherEstimatedCosts">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID39}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarOtherEstimatedCosts" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_BudgetCodes">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarBudgetCodes">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarBudgetCodes">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID40}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarBudgetCodes" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_AdditionalInformation">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarAdditionalInfo">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarAdditionalInfo">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID41}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarAdditionalInfo" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="TAR_TravelCoordinatorId">
                <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="tarTravelCoordinatorId">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="tarTravelCoordinatorId">
                      <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID42}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tarTravelCoordinatorId" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="TAR_BudgetApproverId">
                <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="tarBudgetApproverId">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="tarBudgetApproverId">
                      <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID43}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tarBudgetApproverId" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_InformationRead">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarInformationRead">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarInformationRead">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID44}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarInformationRead" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_LondonOfficeLocation">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarLocatedInLondon">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarLocatedInLondon">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID45}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarLocatedInLondon" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Boolean" x:Key="TAR_RequiresGssApproval">
                <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="tarRequiresGssApproval">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:Boolean" x:Key="tarRequiresGssApproval">
                      <VariableValue x:TypeArguments="x:Boolean" Variable="{x:Reference __ReferenceID46}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:Boolean" ArgumentName="tarRequiresGssApproval" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="TAR_DepartureDate">
                <p:ExpressionContainerValue x:TypeArguments="s:DateTime" DisplayName="tarDepartureDate">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="tarDepartureDate">
                      <VariableValue x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID47}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="s:DateTime" ArgumentName="tarDepartureDate" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_ReturnDate">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarReturnDateString">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarReturnDateString">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID48}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarReturnDateString" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_BudgetApprovalStatus">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarBudgetApprovalStatus">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarBudgetApprovalStatus">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID49}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarBudgetApprovalStatus" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_BudgetApprovalTimestamp">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarBudgetApprovalTimestampString">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarBudgetApprovalTimestampString">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID50}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarBudgetApprovalTimestampString" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_GSSApprovalStatus">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarGssApprovalStatus">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarGssApprovalStatus">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID51}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarGssApprovalStatus" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:String" x:Key="TAR_GSSApprovalTimestamp">
                <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="tarGssApprovalTimestampString">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="tarGssApprovalTimestampString">
                      <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID52}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:String" ArgumentName="tarGssApprovalTimestampString" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="x:Int32" x:Key="TAR_AdditionalStaffMemberId">
                <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="tarAdditionalStaffMemberId">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="x:Int32" x:Key="tarAdditionalStaffMemberId">
                      <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID53}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tarAdditionalStaffMemberId" />
                </p:ExpressionContainerValue>
              </InArgument>
              <InArgument x:TypeArguments="s:DateTime" x:Key="TAR_CreatedDate">
                <p:ExpressionContainerValue x:TypeArguments="s:DateTime" DisplayName="tarCreated">
                  <p:ExpressionContainerValue.Arguments>
                    <InArgument x:TypeArguments="s:DateTime" x:Key="tarCreated">
                      <VariableValue x:TypeArguments="s:DateTime" Variable="{x:Reference __ReferenceID54}" />
                    </InArgument>
                  </p:ExpressionContainerValue.Arguments>
                  <ArgumentValue x:TypeArguments="s:DateTime" ArgumentName="tarCreated" />
                </p:ExpressionContainerValue>
              </InArgument>
            </scg:Dictionary>
          </p:BuildDynamicValue>
        </Sequence>
        <p:HttpSend Method="POST">
          <p:HttpSend.RequestContent>
            <InArgument x:TypeArguments="x:String">
              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="newTarDetails.ToString()">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:Object" x:Key="newTarDetails">
                    <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID55}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:ToString>
                  <InArgument x:TypeArguments="x:Object">
                    <ArgumentValue x:TypeArguments="x:Object" ArgumentName="newTarDetails" />
                  </InArgument>
                </p:ToString>
              </p:ExpressionContainerValue>
            </InArgument>
          </p:HttpSend.RequestContent>
          <p:HttpSend.RequestHeaders>
            <InArgument x:TypeArguments="p:DynamicValue">
              <p:SetDynamicValueProperties>
                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                  <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Content-Type">application/json;odata=verbose</InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="formDigest">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="formDigest">
                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID9}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="formDigest" />
                    </p:ExpressionContainerValue>
                  </InArgument>
                  <InArgument x:TypeArguments="x:String" x:Key="Content-Length">
                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="newTarDetails.ToString().Length.ToString()">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="x:Object" x:Key="newTarDetails">
                          <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID55}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <p:ToString>
                        <InArgument x:TypeArguments="x:Object">
                          <p:Convert x:TypeArguments="x:Int32, x:Object">
                            <InArgument x:TypeArguments="x:Int32">
                              <p:StringLength>
                                <p:StringLength.Result>
                                  <OutArgument x:TypeArguments="x:Int32" />
                                </p:StringLength.Result>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ToString CultureName="{x:Null}" Format="{x:Null}">
                                    <p:ToString.Result>
                                      <OutArgument x:TypeArguments="x:String" />
                                    </p:ToString.Result>
                                    <InArgument x:TypeArguments="x:Object">
                                      <ArgumentValue x:TypeArguments="x:Object" ArgumentName="newTarDetails" />
                                    </InArgument>
                                  </p:ToString>
                                </InArgument>
                              </p:StringLength>
                            </InArgument>
                          </p:Convert>
                        </InArgument>
                      </p:ToString>
                    </p:ExpressionContainerValue>
                  </InArgument>
                </scg:Dictionary>
              </p:SetDynamicValueProperties>
            </InArgument>
          </p:HttpSend.RequestHeaders>
          <p:HttpSend.ResponseContent>
            <OutArgument x:TypeArguments="x:String">
              <p:ExpressionContainerReference x:TypeArguments="x:String" DisplayName="postResponse">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:String" x:Key="postResponse">
                    <VariableReference x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID56}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:String" ArgumentName="postResponse" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </p:HttpSend.ResponseContent>
          <p:HttpSend.ResponseStatusCode>
            <OutArgument x:TypeArguments="sn:HttpStatusCode">
              <p:ExpressionContainerReference x:TypeArguments="sn:HttpStatusCode" DisplayName="postResponseStatusCode">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="sn:HttpStatusCode" x:Key="postResponseStatusCode">
                    <VariableReference x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID57}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="sn:HttpStatusCode" ArgumentName="postResponseStatusCode" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </p:HttpSend.ResponseStatusCode>
          <p:HttpSend.Uri>
            <InArgument x:TypeArguments="x:String">
              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;{0}/_api/Lists/getByTitle('{1}')/items&quot;, webUrl, archiveListName);">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:Object" x:Key="webUrl">
                    <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID0}" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Object" x:Key="archiveListName">
                    <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID14}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:FormatString Format="{}{0}/_api/Lists/getByTitle('{1}')/items">
                  <InArgument x:TypeArguments="x:Object">
                    <ArgumentValue x:TypeArguments="x:Object" ArgumentName="webUrl" />
                  </InArgument>
                  <InArgument x:TypeArguments="x:Object">
                    <ArgumentValue x:TypeArguments="x:Object" ArgumentName="archiveListName" />
                  </InArgument>
                </p:FormatString>
              </p:ExpressionContainerValue>
            </InArgument>
          </p:HttpSend.Uri>
        </p:HttpSend>
        <If DisplayName="If TAR item has been archived successfully">
          <If.Condition>
            <InArgument x:TypeArguments="x:Boolean">
              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="postResponseStatusCode == HttpStatusCode.Created">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="sn:HttpStatusCode" x:Key="postResponseStatusCode">
                    <VariableValue x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID57}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:IsEqual x:TypeArguments="x:Int32">
                  <p:IsEqual.Left>
                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                      <p:Convert x:TypeArguments="sn:HttpStatusCode, x:Int32">
                        <InArgument x:TypeArguments="sn:HttpStatusCode">
                          <ArgumentValue x:TypeArguments="sn:HttpStatusCode" ArgumentName="postResponseStatusCode" />
                        </InArgument>
                      </p:Convert>
                    </InArgument>
                  </p:IsEqual.Left>
                  <p:IsEqual.Right>
                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="201" />
                  </p:IsEqual.Right>
                </p:IsEqual>
              </p:ExpressionContainerValue>
            </InArgument>
          </If.Condition>
          <If.Then>
            <Sequence>
              <p:HttpSend DisplayName="Delete old TAR" Method="POST">
                <p:HttpSend.RequestHeaders>
                  <InArgument x:TypeArguments="p:DynamicValue">
                    <p:SetDynamicValueProperties>
                      <scg:Dictionary x:TypeArguments="x:String, InArgument">
                        <InArgument x:TypeArguments="x:String" x:Key="X-HTTP-Method">DELETE</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="If-Match">*</InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                          <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="formDigest">
                            <p:ExpressionContainerValue.Arguments>
                              <InArgument x:TypeArguments="x:String" x:Key="formDigest">
                                <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID9}" />
                              </InArgument>
                            </p:ExpressionContainerValue.Arguments>
                            <ArgumentValue x:TypeArguments="x:String" ArgumentName="formDigest" />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </scg:Dictionary>
                    </p:SetDynamicValueProperties>
                  </InArgument>
                </p:HttpSend.RequestHeaders>
                <p:HttpSend.ResponseStatusCode>
                  <OutArgument x:TypeArguments="sn:HttpStatusCode">
                    <p:ExpressionContainerReference x:TypeArguments="sn:HttpStatusCode" DisplayName="postResponseStatusCode">
                      <p:ExpressionContainerReference.Arguments>
                        <InOutArgument x:TypeArguments="sn:HttpStatusCode" x:Key="postResponseStatusCode">
                          <VariableReference x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID57}" />
                        </InOutArgument>
                      </p:ExpressionContainerReference.Arguments>
                      <ArgumentReference x:TypeArguments="sn:HttpStatusCode" ArgumentName="postResponseStatusCode" />
                    </p:ExpressionContainerReference>
                  </OutArgument>
                </p:HttpSend.ResponseStatusCode>
                <p:HttpSend.Uri>
                  <InArgument x:TypeArguments="x:String">
                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;{0}/_api/Lists/getByTitle('TAR Requests')/items('{1}')&quot;, webUrl, tarId)">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="x:Object" x:Key="webUrl">
                          <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID0}" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:Int32" x:Key="tarId">
                          <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID13}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <p:FormatString Format="{}{0}/_api/Lists/getByTitle('TAR Requests')/items('{1}')">
                        <InArgument x:TypeArguments="x:Object">
                          <ArgumentValue x:TypeArguments="x:Object" ArgumentName="webUrl" />
                        </InArgument>
                        <InArgument x:TypeArguments="x:Object">
                          <p:Convert x:TypeArguments="x:Int32, x:Object">
                            <InArgument x:TypeArguments="x:Int32">
                              <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tarId" />
                            </InArgument>
                          </p:Convert>
                        </InArgument>
                      </p:FormatString>
                    </p:ExpressionContainerValue>
                  </InArgument>
                </p:HttpSend.Uri>
              </p:HttpSend>
              <If DisplayName="If delete was not successful">
                <If.Condition>
                  <InArgument x:TypeArguments="x:Boolean">
                    <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="postResponseStatusCode != HttpStatusCode.OK">
                      <p:ExpressionContainerValue.Arguments>
                        <InArgument x:TypeArguments="sn:HttpStatusCode" x:Key="postResponseStatusCode">
                          <VariableValue x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID57}" />
                        </InArgument>
                      </p:ExpressionContainerValue.Arguments>
                      <p:Not>
                        <InArgument x:TypeArguments="x:Boolean">
                          <p:IsEqual x:TypeArguments="x:Int32">
                            <p:IsEqual.Left>
                              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                                <p:Convert x:TypeArguments="sn:HttpStatusCode, x:Int32">
                                  <p:Convert.Result>
                                    <OutArgument x:TypeArguments="x:Int32" />
                                  </p:Convert.Result>
                                  <InArgument x:TypeArguments="sn:HttpStatusCode">
                                    <ArgumentValue x:TypeArguments="sn:HttpStatusCode" ArgumentName="postResponseStatusCode" />
                                  </InArgument>
                                </p:Convert>
                              </InArgument>
                            </p:IsEqual.Left>
                            <p:IsEqual.Right>
                              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="200" />
                            </p:IsEqual.Right>
                          </p:IsEqual>
                        </InArgument>
                      </p:Not>
                    </p:ExpressionContainerValue>
                  </InArgument>
                </If.Condition>
                <If.Then>
                  <p1:WriteToHistory>
                    <p1:WriteToHistory.Message>
                      <InArgument x:TypeArguments="x:String">
                        <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;TAR Archiving WF could not delete TAR Request with id: {0}&quot;, tarId);">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="tarId">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID13}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:FormatString Format="TAR Archiving WF could not delete TAR Request with id: {0}">
                            <InArgument x:TypeArguments="x:Object">
                              <p:Convert x:TypeArguments="x:Int32, x:Object">
                                <InArgument x:TypeArguments="x:Int32">
                                  <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tarId" />
                                </InArgument>
                              </p:Convert>
                            </InArgument>
                          </p:FormatString>
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p1:WriteToHistory.Message>
                  </p1:WriteToHistory>
                </If.Then>
                <If.Else>
                  <Sequence DisplayName="Delete TAR associated Tasks">
                    <Sequence.Variables>
                      <Variable x:TypeArguments="p:DynamicValue" x:Name="__ReferenceID58" Name="tasksRestResponse" />
                      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID59" Name="tasksCount" />
                      <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID60" Name="tasksIndex" />
                    </Sequence.Variables>
                    <p:HttpSend DisplayName="Call REST to get associated Tasks" Method="GET">
                      <p:HttpSend.RequestHeaders>
                        <InArgument x:TypeArguments="p:DynamicValue">
                          <p:SetDynamicValueProperties>
                            <scg:Dictionary x:TypeArguments="x:String, InArgument">
                              <InArgument x:TypeArguments="x:String" x:Key="Accept">application/json;odata=verbose</InArgument>
                            </scg:Dictionary>
                          </p:SetDynamicValueProperties>
                        </InArgument>
                      </p:HttpSend.RequestHeaders>
                      <p:HttpSend.ResponseContent>
                        <OutArgument x:TypeArguments="p:DynamicValue">
                          <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="tasksRestResponse">
                            <p:ExpressionContainerReference.Arguments>
                              <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="tasksRestResponse">
                                <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID58}" />
                              </InOutArgument>
                            </p:ExpressionContainerReference.Arguments>
                            <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="tasksRestResponse" />
                          </p:ExpressionContainerReference>
                        </OutArgument>
                      </p:HttpSend.ResponseContent>
                      <p:HttpSend.Uri>
                        <InArgument x:TypeArguments="x:String">
                          <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;{0}_api/Lists/getByTitle('TAR Workflow Tasks')/items?$filter=((Status eq 'Completed') and (substringof('{1}',Title)))&quot;, webUrl, tarTitle);">
                            <p:ExpressionContainerValue.Arguments>
                              <InArgument x:TypeArguments="x:Object" x:Key="webUrl">
                                <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID0}" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:Object" x:Key="tarTitle">
                                <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID16}" />
                              </InArgument>
                            </p:ExpressionContainerValue.Arguments>
                            <p:FormatString Format="{}{0}_api/Lists/getByTitle('TAR Workflow Tasks')/items?$filter=((Status eq 'Completed') and (substringof('{1}',Title)))">
                              <InArgument x:TypeArguments="x:Object">
                                <ArgumentValue x:TypeArguments="x:Object" ArgumentName="webUrl" />
                              </InArgument>
                              <InArgument x:TypeArguments="x:Object">
                                <ArgumentValue x:TypeArguments="x:Object" ArgumentName="tarTitle" />
                              </InArgument>
                            </p:FormatString>
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </p:HttpSend.Uri>
                    </p:HttpSend>
                    <p:GetDynamicValueProperty x:TypeArguments="p:DynamicValue" DisplayName="Get d/results from REST response" PropertyName="d/results">
                      <p:GetDynamicValueProperty.Result>
                        <OutArgument x:TypeArguments="p:DynamicValue">
                          <p:ExpressionContainerReference x:TypeArguments="p:DynamicValue" DisplayName="tasksRestResponse">
                            <p:ExpressionContainerReference.Arguments>
                              <InOutArgument x:TypeArguments="p:DynamicValue" x:Key="tasksRestResponse">
                                <VariableReference x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID58}" />
                              </InOutArgument>
                            </p:ExpressionContainerReference.Arguments>
                            <ArgumentReference x:TypeArguments="p:DynamicValue" ArgumentName="tasksRestResponse" />
                          </p:ExpressionContainerReference>
                        </OutArgument>
                      </p:GetDynamicValueProperty.Result>
                      <p:GetDynamicValueProperty.Source>
                        <InArgument x:TypeArguments="p:DynamicValue">
                          <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="tasksRestResponse">
                            <p:ExpressionContainerValue.Arguments>
                              <InArgument x:TypeArguments="p:DynamicValue" x:Key="tasksRestResponse">
                                <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID58}" />
                              </InArgument>
                            </p:ExpressionContainerValue.Arguments>
                            <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="tasksRestResponse" />
                          </p:ExpressionContainerValue>
                        </InArgument>
                      </p:GetDynamicValueProperty.Source>
                    </p:GetDynamicValueProperty>
                    <p:CountDynamicValueItems DisplayName="Count tasks">
                      <p:CountDynamicValueItems.Result>
                        <OutArgument x:TypeArguments="x:Int32">
                          <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tasksCount">
                            <p:ExpressionContainerReference.Arguments>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="tasksCount">
                                <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID59}" />
                              </InOutArgument>
                            </p:ExpressionContainerReference.Arguments>
                            <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tasksCount" />
                          </p:ExpressionContainerReference>
                        </OutArgument>
                      </p:CountDynamicValueItems.Result>
                      <InArgument x:TypeArguments="p:DynamicValue">
                        <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="tasksRestResponse">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="p:DynamicValue" x:Key="tasksRestResponse">
                              <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID58}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="tasksRestResponse" />
                        </p:ExpressionContainerValue>
                      </InArgument>
                    </p:CountDynamicValueItems>
                    <Assign DisplayName="Initialize index">
                      <Assign.To>
                        <OutArgument x:TypeArguments="x:Int32">
                          <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tasksIndex">
                            <p:ExpressionContainerReference.Arguments>
                              <InOutArgument x:TypeArguments="x:Int32" x:Key="tasksIndex">
                                <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID60}" />
                              </InOutArgument>
                            </p:ExpressionContainerReference.Arguments>
                            <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tasksIndex" />
                          </p:ExpressionContainerReference>
                        </OutArgument>
                      </Assign.To>
                      <Assign.Value>
                        <InArgument x:TypeArguments="x:Int32">
                          <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="0;" Expression="0" />
                        </InArgument>
                      </Assign.Value>
                    </Assign>
                    <While DisplayName="Iterate over tasks">
                      <While.Condition>
                        <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="tasksIndex &lt; tasksCount">
                          <p:ExpressionContainerValue.Arguments>
                            <InArgument x:TypeArguments="x:Int32" x:Key="tasksIndex">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID60}" />
                            </InArgument>
                            <InArgument x:TypeArguments="x:Int32" x:Key="tasksCount">
                              <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID59}" />
                            </InArgument>
                          </p:ExpressionContainerValue.Arguments>
                          <p:IsLessThan x:TypeArguments="x:Int32">
                            <p:IsLessThan.Left>
                              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                                <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tasksIndex" />
                              </InArgument>
                            </p:IsLessThan.Left>
                            <p:IsLessThan.Right>
                              <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1">
                                <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tasksCount" />
                              </InArgument>
                            </p:IsLessThan.Right>
                          </p:IsLessThan>
                        </p:ExpressionContainerValue>
                      </While.Condition>
                      <Sequence DisplayName="Delete Task">
                        <Sequence.Variables>
                          <Variable x:TypeArguments="x:Int32" x:Name="__ReferenceID61" Name="taskId" />
                        </Sequence.Variables>
                        <p:GetDynamicValueProperty x:TypeArguments="x:Int32" DisplayName="Get Task Id">
                          <p:GetDynamicValueProperty.PropertyName>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;({0})/Id&quot;, tasksIndex);">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="tasksIndex">
                                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID60}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:FormatString Format="({0})/Id">
                                  <InArgument x:TypeArguments="x:Object">
                                    <p:Convert x:TypeArguments="x:Int32, x:Object">
                                      <InArgument x:TypeArguments="x:Int32">
                                        <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tasksIndex" />
                                      </InArgument>
                                    </p:Convert>
                                  </InArgument>
                                </p:FormatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:GetDynamicValueProperty.PropertyName>
                          <p:GetDynamicValueProperty.Result>
                            <OutArgument x:TypeArguments="x:Int32">
                              <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="taskId">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="taskId">
                                    <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID61}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="taskId" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:GetDynamicValueProperty.Result>
                          <p:GetDynamicValueProperty.Source>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:ExpressionContainerValue x:TypeArguments="p:DynamicValue" DisplayName="tasksRestResponse">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="p:DynamicValue" x:Key="tasksRestResponse">
                                    <VariableValue x:TypeArguments="p:DynamicValue" Variable="{x:Reference __ReferenceID58}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <ArgumentValue x:TypeArguments="p:DynamicValue" ArgumentName="tasksRestResponse" />
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:GetDynamicValueProperty.Source>
                        </p:GetDynamicValueProperty>
                        <p:HttpSend DisplayName="Delete old TAR's task" Method="POST">
                          <p:HttpSend.RequestHeaders>
                            <InArgument x:TypeArguments="p:DynamicValue">
                              <p:SetDynamicValueProperties>
                                <scg:Dictionary x:TypeArguments="x:String, InArgument">
                                  <InArgument x:TypeArguments="x:String" x:Key="X-HTTP-Method">DELETE</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="If-Match">*</InArgument>
                                  <InArgument x:TypeArguments="x:String" x:Key="X-RequestDigest">
                                    <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="formDigest">
                                      <p:ExpressionContainerValue.Arguments>
                                        <InArgument x:TypeArguments="x:String" x:Key="formDigest">
                                          <VariableValue x:TypeArguments="x:String" Variable="{x:Reference __ReferenceID9}" />
                                        </InArgument>
                                      </p:ExpressionContainerValue.Arguments>
                                      <ArgumentValue x:TypeArguments="x:String" ArgumentName="formDigest" />
                                    </p:ExpressionContainerValue>
                                  </InArgument>
                                </scg:Dictionary>
                              </p:SetDynamicValueProperties>
                            </InArgument>
                          </p:HttpSend.RequestHeaders>
                          <p:HttpSend.ResponseStatusCode>
                            <OutArgument x:TypeArguments="sn:HttpStatusCode">
                              <p:ExpressionContainerReference x:TypeArguments="sn:HttpStatusCode" DisplayName="postResponseStatusCode">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="sn:HttpStatusCode" x:Key="postResponseStatusCode">
                                    <VariableReference x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID57}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="sn:HttpStatusCode" ArgumentName="postResponseStatusCode" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </p:HttpSend.ResponseStatusCode>
                          <p:HttpSend.Uri>
                            <InArgument x:TypeArguments="x:String">
                              <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;{0}/_api/Lists/getByTitle('TAR Workflow Tasks')/items('{1}')&quot;, webUrl, taskId)">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Object" x:Key="webUrl">
                                    <VariableValue x:TypeArguments="x:Object" Variable="{x:Reference __ReferenceID0}" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="taskId">
                                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID61}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:FormatString Format="{}{0}/_api/Lists/getByTitle('TAR Workflow Tasks')/items('{1}')">
                                  <InArgument x:TypeArguments="x:Object">
                                    <ArgumentValue x:TypeArguments="x:Object" ArgumentName="webUrl" />
                                  </InArgument>
                                  <InArgument x:TypeArguments="x:Object">
                                    <p:Convert x:TypeArguments="x:Int32, x:Object">
                                      <InArgument x:TypeArguments="x:Int32">
                                        <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="taskId" />
                                      </InArgument>
                                    </p:Convert>
                                  </InArgument>
                                </p:FormatString>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </p:HttpSend.Uri>
                        </p:HttpSend>
                        <If DisplayName="If could not delete task">
                          <If.Condition>
                            <InArgument x:TypeArguments="x:Boolean">
                              <p:ExpressionContainerValue x:TypeArguments="x:Boolean" DisplayName="postResponseStatusCode != HttpStatusCode.OK">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="sn:HttpStatusCode" x:Key="postResponseStatusCode">
                                    <VariableValue x:TypeArguments="sn:HttpStatusCode" Variable="{x:Reference __ReferenceID57}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:Not>
                                  <InArgument x:TypeArguments="x:Boolean">
                                    <p:IsEqual x:TypeArguments="x:Int32">
                                      <p:IsEqual.Left>
                                        <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                                          <p:Convert x:TypeArguments="sn:HttpStatusCode, x:Int32">
                                            <p:Convert.Result>
                                              <OutArgument x:TypeArguments="x:Int32" />
                                            </p:Convert.Result>
                                            <InArgument x:TypeArguments="sn:HttpStatusCode">
                                              <ArgumentValue x:TypeArguments="sn:HttpStatusCode" ArgumentName="postResponseStatusCode" />
                                            </InArgument>
                                          </p:Convert>
                                        </InArgument>
                                      </p:IsEqual.Left>
                                      <p:IsEqual.Right>
                                        <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="200" />
                                      </p:IsEqual.Right>
                                    </p:IsEqual>
                                  </InArgument>
                                </p:Not>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </If.Condition>
                          <If.Then>
                            <p1:WriteToHistory>
                              <p1:WriteToHistory.Message>
                                <InArgument x:TypeArguments="x:String">
                                  <p:ExpressionContainerValue x:TypeArguments="x:String" DisplayName="string.Format(&quot;Could not delete TAR Task with Id: {0}&quot;, taskId);">
                                    <p:ExpressionContainerValue.Arguments>
                                      <InArgument x:TypeArguments="x:Int32" x:Key="taskId">
                                        <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID61}" />
                                      </InArgument>
                                    </p:ExpressionContainerValue.Arguments>
                                    <p:FormatString Format="Could not delete TAR Task with Id: {0}">
                                      <InArgument x:TypeArguments="x:Object">
                                        <p:Convert x:TypeArguments="x:Int32, x:Object">
                                          <InArgument x:TypeArguments="x:Int32">
                                            <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="taskId" />
                                          </InArgument>
                                        </p:Convert>
                                      </InArgument>
                                    </p:FormatString>
                                  </p:ExpressionContainerValue>
                                </InArgument>
                              </p1:WriteToHistory.Message>
                            </p1:WriteToHistory>
                          </If.Then>
                        </If>
                        <Assign DisplayName="Increment index">
                          <Assign.To>
                            <OutArgument x:TypeArguments="x:Int32">
                              <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="tasksIndex">
                                <p:ExpressionContainerReference.Arguments>
                                  <InOutArgument x:TypeArguments="x:Int32" x:Key="tasksIndex">
                                    <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID60}" />
                                  </InOutArgument>
                                </p:ExpressionContainerReference.Arguments>
                                <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="tasksIndex" />
                              </p:ExpressionContainerReference>
                            </OutArgument>
                          </Assign.To>
                          <Assign.Value>
                            <InArgument x:TypeArguments="x:Int32">
                              <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="tasksIndex + 1;">
                                <p:ExpressionContainerValue.Arguments>
                                  <InArgument x:TypeArguments="x:Int32" x:Key="tasksIndex">
                                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID60}" />
                                  </InArgument>
                                </p:ExpressionContainerValue.Arguments>
                                <p:Add x:TypeArguments="x:Int32">
                                  <p:Add.Left>
                                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                                      <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="tasksIndex" />
                                    </InArgument>
                                  </p:Add.Left>
                                  <p:Add.Right>
                                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="1" />
                                  </p:Add.Right>
                                </p:Add>
                              </p:ExpressionContainerValue>
                            </InArgument>
                          </Assign.Value>
                        </Assign>
                      </Sequence>
                    </While>
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </If.Then>
        </If>
        <Assign>
          <Assign.To>
            <OutArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerReference x:TypeArguments="x:Int32" DisplayName="index">
                <p:ExpressionContainerReference.Arguments>
                  <InOutArgument x:TypeArguments="x:Int32" x:Key="index">
                    <VariableReference x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID7}" />
                  </InOutArgument>
                </p:ExpressionContainerReference.Arguments>
                <ArgumentReference x:TypeArguments="x:Int32" ArgumentName="index" />
              </p:ExpressionContainerReference>
            </OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="x:Int32">
              <p:ExpressionContainerValue x:TypeArguments="x:Int32" DisplayName="index + 1;">
                <p:ExpressionContainerValue.Arguments>
                  <InArgument x:TypeArguments="x:Int32" x:Key="index">
                    <VariableValue x:TypeArguments="x:Int32" Variable="{x:Reference __ReferenceID7}" />
                  </InArgument>
                </p:ExpressionContainerValue.Arguments>
                <p:Add x:TypeArguments="x:Int32">
                  <p:Add.Left>
                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="0">
                      <ArgumentValue x:TypeArguments="x:Int32" ArgumentName="index" />
                    </InArgument>
                  </p:Add.Left>
                  <p:Add.Right>
                    <InArgument x:TypeArguments="x:Int32" EvaluationOrder="1" Expression="1" />
                  </p:Add.Right>
                </p:Add>
              </p:ExpressionContainerValue>
            </InArgument>
          </Assign.Value>
        </Assign>
      </Sequence>
    </While>
  </Sequence>
</Activity>